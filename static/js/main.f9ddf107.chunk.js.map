{"version":3,"sources":["mock/randomSites.js","components/LineChart/d3LineChart.js","components/LineChart/LineChart.js","components/LeafletMap/LeafletMap.js","components/Summary/Summary.js","components/Header/Header.js","components/Overview/Overview.js","components/VisUnit/VisUnit.js","components/VisLayout/VisLayout.js","components/Sidepanel/SidePanel.js","components/GraphContainer/GraphContainer.js","Dashboard.js","reportWebVitals.js","index.js"],"names":["getRandomLongitude","min","max","randomRange","from","to","places","Math","random","toFixed","draw","props","selectID","divID","data","cloneDeep","dated_data","Object","entries","key","value","date_obj","date","Date","parseInt","count","push","convertData","d3","remove","margin","width","height","x","domain","d","range","y","svg","append","attr","lineColour","colour","datum","call","ticks","LineChart","this","className","React","Component","LeafletMap","sites","markers","location","marker","Marker","position","Popup","toUpperCase","processSites","zoom","style","MapContainer","center","centre","scrollWheelZoom","TileLayer","attribution","url","Summary","children","Overview","VisUnit","vis","VisLayout","visualisations","Array","isArray","map","child","index","id","SidePanel","CSSTransition","in","isOpen","timeout","classNames","unmountOnExit","onClick","togglePanel","class","window","open","GraphContainer","state","contRef","createRef","node","current","parentNode","clientHeight","clientWidth","setState","updateDimensions","addEventListener","bind","removeEventListener","ref","cloneElement","Dashboard","error","isLoaded","sidePanel","apiData","i","latitude","longitude","site_name","getSelection","toString","replace","substr","createSites","toggleSidePanel","apiURL","uuidv4","colours","message","gas_data_a","random_data","gas_data_b","gas_data_c","getID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9ddf107.chunk.js","sourcesContent":["function getRandomLatitude(min, max) {\n  const from = min ? min : -90;\n  const to = max ? max : 90;\n  const dec_places = 5;\n\n  return randomRange(from, to, dec_places);\n}\n\nfunction getRandomLongitude(min, max) {\n  const from = min ? min : -180;\n  const to = max ? max : 180;\n  const dec_places = 5;\n\n  return randomRange(from, to, dec_places);\n}\n\nfunction randomRange(from, to, places) {\n  // Returns a float\n  return (Math.random() * (to - from) + from).toFixed(places) * 1;\n}\n\nfunction getSiteName() {\n  return Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\")\n    .substr(0, 3);\n}\n\nexport function createSites() {\n  // Creates random sites at random lat/longs worldwide\n  const n_sites = 10;\n  let sites = {};\n\n  // Western Europe\n  const minLat = 35;\n  const maxLat = 68;\n\n  const minLong = -13;\n  const maxLong = 38;\n\n  for (let i = 0; i < n_sites; i++) {\n    const location = {\n      latitude: getRandomLatitude(minLat, maxLat),\n      longitude: getRandomLongitude(minLong, maxLong),\n    };\n\n    let site_name = getSelection();\n\n    while (site_name in sites) {\n      site_name = getSiteName();\n    }\n\n    sites[site_name] = location;\n  }\n\n  return sites;\n}\n","import * as d3 from \"d3\";\nimport { cloneDeep } from \"lodash\";\nimport \"./LineChart.css\";\n\nfunction convertData(data) {\n  // Takes the pandas exported JSON data and converts timestamps\n  //\n  // Args:\n  //    data (object): JSON output from pandas\n  // Returns:\n  //    Array: array of Objects with date and value keys\n  let dated_data = [];\n\n  for (const [key, value] of Object.entries(data)) {\n    const date = new Date(parseInt(key));\n    let date_obj = { date: date, count: value };\n\n    dated_data.push(date_obj);\n  }\n\n  return dated_data;\n}\n\nconst draw = (props) => {\n  const selectID = \".\" + props.divID;\n\n  let data = [];\n\n  if (props.data !== null) {\n    data = cloneDeep(props.data);\n  }\n  //   Here we convert pandas JSON output data to\n  //   an array of objects with date, count keys\n  data = convertData(data);\n\n  d3.select(selectID + \" > *\").remove();\n\n  const divWidth = props.width;\n  const divHeight = props.height;\n\n  const margin = { top: 0, right: 30, bottom: 50, left: 40 };\n  const width = divWidth - margin.left - margin.right;\n  const height = divHeight - margin.top - margin.bottom;\n\n  // Setup the x-axis and set its limits\n  let x = d3\n    .scaleTime()\n    .domain(\n      d3.extent(data, function (d) {\n        return d.date;\n      })\n    )\n    .range([0, width]);\n\n  // Add Y axis\n  let y = d3\n    .scaleLinear()\n    .domain([\n      0,\n      d3.max(data, function (d) {\n        return +d.count;\n      }),\n    ])\n    .range([height, 0]);\n\n  const svg = d3\n    .select(selectID)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n  const lineColour = props.colour;\n  // Draw the line first so it doesn't overlay the axes\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", lineColour)\n    .attr(\"stroke-width\", 1.5)\n    .attr(\n      \"d\",\n      d3\n        .line()\n        .x(function (d) {\n          return x(d.date);\n        })\n        .y(function (d) {\n          return y(d.count);\n        })\n    );\n\n  // Add the x-axis to the svg\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x));\n\n  // Add the y-axis\n  svg.append(\"g\").attr(\"class\", \"y-axis\").call(d3.axisLeft(y).ticks(4));\n};\n\nexport default draw;\n","import React from \"react\";\nimport \"./LineChart.css\";\nimport draw from \"./d3LineChart.js\";\n\nclass LineChart extends React.Component {\n  componentDidMount() {\n    draw(this.props);\n  }\n\n  componentDidUpdate() {\n    draw(this.props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={this.props.divID} />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./LeafletMap.css\";\n\nclass LeafletMap extends React.Component {\n  processSites() {\n    const sites = this.props.sites;\n\n    let markers = [];\n    for (const [key, value] of Object.entries(sites)) {\n      const latitude = value[\"latitude\"];\n      const longitude = value[\"longitude\"];\n\n      const location = [latitude, longitude];\n\n      const marker = (\n        <Marker position={location}>\n          <Popup>{key.toUpperCase()}</Popup>\n        </Marker>\n      );\n\n      markers.push(marker);\n    }\n\n    return markers;\n  }\n\n  render() {\n    // Here we can pass an array of tuples (x, y, title) for position markers?\n    // const position = [51.458377, -2.603017];\n\n    const markers = this.processSites();\n    const zoom = this.props.zoom ? this.props.zoom : 5;\n\n    const width = this.props.width ? this.props.width : \"60vw\";\n    const height = this.props.height ? this.props.height : \"40vh\";\n\n    const style = { width: width, height: height };\n\n    return (\n      <div className=\"map-container\">\n        <MapContainer\n          center={this.props.centre}\n          zoom={zoom}\n          scrollWheelZoom={true}\n          style={style}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {markers}\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nexport default LeafletMap;\n","import React from \"react\";\nimport \"./Summary.css\";\n\nclass Summary extends React.Component {\n  render() {\n    return <div className=\"summary\">{this.props.children}</div>;\n  }\n}\n\nexport default Summary;\n","import React from \"react\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { this: 1 };\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div>{this.props.text}</div>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from \"react\";\nimport \"./Overview.css\";\n\nclass Overview extends React.Component {\n  render() {\n    return (\n      <div className=\"overview\">\n        <div className=\"overview-card\">\n          <b>Glasgow</b>\n          <br />\n          Temperature: 13°C\n        </div>\n        <div className=\"overview-card\">\n          <b>Air quality</b>\n          <br />\n          AQI: 55\n        </div>\n        <div className=\"overview-card\">\n          <b>CO2</b>\n          <br />\n          409.8 ppm\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import React from \"react\";\nimport \"./VisUnit.css\";\n\nclass VisUnit extends React.Component {\n  render() {\n    return <div className=\"vis-unit\">{this.props.vis}</div>;\n  }\n}\n\nexport default VisUnit;\n","import React from \"react\";\nimport VisUnit from \"../VisUnit/VisUnit\";\n\nimport \"./VisLayout.css\";\n\nclass VisLayout extends React.Component {\n  render() {\n    let visualisations;\n    if (Array.isArray(this.props.children)) {\n      visualisations = this.props.children.map((child, index) => {\n        return <VisUnit key={child.id} vis={child} />;\n      });\n    } else {\n      visualisations = <VisUnit vis={this.props.children} />;\n    }\n\n    return (\n      <div className=\"vis-main\">{visualisations}</div>\n    );\n  }\n}\n\nexport default VisLayout;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SidePanel.css\";\n\nclass SidePanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <CSSTransition\n          in={this.props.isOpen}\n          timeout={300}\n          classNames={\"panel-transition\"}\n          unmountOnExit\n        >\n          <div className=\"panel-container\">\n            <div className=\"panel-header\">\n              <div onClick={this.props.togglePanel} class=\"panel-nav-icon\">\n                <div></div>\n              </div>\n            </div>\n            <div className=\"panel-links\">\n              <li className=\"panel-list-item\">\n                <button className=\"panel-button\">About</button>\n              </li>\n              <li className=\"panel-list-item\">\n                <button className=\"panel-button\">Data</button>\n              </li>\n              <li className=\"panel-list-item\">\n                <button\n                  onClick={() => {window.open('https://github.com/openghg/dashboard', \"_blank\")}}\n                  className=\"panel-button\"\n                >\n                  Source\n                </button>\n              </li>\n              <li className=\"panel-list-item\">\n                <button\n                  onClick={this.props.togglePanel}\n                  className=\"panel-button\"\n                >\n                  Close\n                </button>\n              </li>\n            </div>\n          </div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\n// SidePanel.propTypes = {\n//   children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n//   isOpen: PropTypes.bool,\n//   maxSize: PropTypes.string,\n//   minSize: PropTypes.string,\n//   position: PropTypes.string,\n//   width: PropTypes.string,\n//   height: PropTypes.string,\n// };\n\nexport default SidePanel;\n","import React from \"react\";\n\nclass GraphContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set the initial size of the plot\n    this.state = { width: 1000, height: 250 };\n    this.contRef = React.createRef();\n  }\n\n  updateDimensions() {\n    const node = this.contRef.current;\n    if (node) {\n      const height = node.parentNode.clientHeight;\n      const width = node.parentNode.clientWidth;\n      this.setState({ height: height, width: width });\n    }\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <div ref={this.contRef}>\n        {React.cloneElement(this.props.children, {\n          height: this.state.height,\n          width: this.state.width,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default GraphContainer;\n","import \"./Dashboard.css\";\nimport React from \"react\";\nimport random_data from \"./random.json\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createSites } from \"./mock/randomSites.js\";\n\nimport LineChart from \"./components/LineChart/LineChart\";\nimport LeafletMap from \"./components/LeafletMap/LeafletMap\";\n\nimport Header from \"./components/Header/Header\";\nimport Summary from \"./components/Summary/Summary\";\nimport Overview from \"./components/Overview/Overview\";\nimport VisLayout from \"./components/VisLayout/VisLayout\";\nimport SidePanel from \"./components/Sidepanel/SidePanel\";\n\nimport GraphContainer from \"./components/GraphContainer/GraphContainer\";\n\nconst apiAddress =\n  \"https://hcn2wtdvd6.execute-api.us-east-2.amazonaws.com/default/random\";\n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      sidePanel: false,\n      apiData: [],\n    };\n\n    this.state.sites = createSites();\n\n    this.toggleSidePanel = this.toggleSidePanel.bind(this);\n  }\n\n  apiFetch(apiURL) {}\n\n  componentDidMount() {\n    // const apiURL = \"\";\n    // fetch(apiURL)\n    //   .then((res) => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         weatherData: result,\n    //         // or apiData\n    //       });\n    //     },\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error,\n    //       });\n    //     }\n    //   );\n  }\n\n  getID() {\n    // Create a unique ID for each visualisation\n    return \"vis-id-\" + uuidv4();\n  }\n\n  toggleSidePanel() {\n    this.setState({ sidePanel: !this.state.sidePanel });\n  }\n\n  render() {\n    let { error, isLoaded, apiData } = this.state;\n\n    const colours = [\"#013a63\", \"#2a6f97\", \"#014f86\"]\n\n    isLoaded = true;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      const gas_data_a = random_data[\"gas_a\"];\n      const gas_data_b = random_data[\"gas_b\"];\n      const gas_data_c = random_data[\"gas_c\"];\n\n      // Break the header into a component?\n      // Break the cards into components?\n      // How will visualisations scale?\n      // Have a VisLayout component that takes\n\n      return (\n        <div className=\"grid-container\">\n          <div className=\"header\">\n            <div onClick={this.toggleSidePanel} class=\"nav-icon\">\n              <div></div>\n            </div>\n            OpenGHG Dashboard\n          </div>\n          <div className=\"main\">\n            <SidePanel\n              isOpen={this.state.sidePanel}\n              togglePanel={this.toggleSidePanel}\n            />\n            <LeafletMap\n              divID={this.getID()}\n              sites={this.state.sites}\n              centre={[51.458377, -2.603017]}\n              zoom={5}\n              width={\"75vw\"}\n              height={\"65vh\"}\n            />\n            <Summary>\n              <div>\n                Glasgow is the third most populous city in the United Kingdom,\n                with an estimated city population of 612,040 in 2016.\n              </div>\n            </Summary>\n\n            <Overview />\n\n            <VisLayout>\n              <GraphContainer>\n                <LineChart divID={this.getID()} data={gas_data_a} colour={colours[2]} />\n              </GraphContainer>\n              <GraphContainer>\n                <LineChart divID={this.getID()} data={gas_data_b} colour={colours[1]}/>\n              </GraphContainer>\n              <GraphContainer>\n                <LineChart divID={this.getID()} data={gas_data_c} colour={colours[0]}/>\n              </GraphContainer>\n            </VisLayout>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}