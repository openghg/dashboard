{"version":3,"sources":["components/ControlPanel/ControlPanel.module.css","components/LeafletMap/LeafletMap.module.css","components/DataSelector/DataSelector.module.css","components/SelectionBlock/SelectionBlock.module.css","components/LineChart/LineChart.module.css","components/VisUnit/VisUnit.module.css","components/VisLayout/VisLayout.module.css","components/LineChart/LineChart.js","components/LeafletMap/LeafletMap.js","components/Summary/Summary.js","components/Overview/Overview.js","components/VisUnit/VisUnit.js","components/VisLayout/VisLayout.js","components/Checkbox/Checkbox.js","components/SelectionBlock/SelectionBlock.js","components/DataSelector/DataSelector.js","images/github.svg","components/ControlPanel/ControlPanel.js","components/GraphContainer/GraphContainer.js","Dashboard.js","reportWebVitals.js","index.js"],"names":["module","exports","LineChart","data","this","props","plotData","siteNumber","Object","entries","site","siteData","x_values","keys","map","d","Date","parseInt","y_values","values","name","String","toUpperCase","selectedColour","colours","trace","x","y","mode","line","width","color","push","layout","title","text","font","size","xanchor","yanchor","xaxis","xLabel","range","xRange","showgrid","linecolor","autotick","ticks","yaxis","yLabel","yRange","zeroline","height","margin","l","r","b","t","pad","className","styles","container","React","Component","LeafletMap","sites","markers","key","value","latitude","longitude","locationStr","location","marker","Marker","position","Popup","markerHeader","markerBody","markerLocation","processSites","zoom","style","MapContainer","center","centre","scrollWheelZoom","TileLayer","attribution","url","Summary","children","Overview","VisUnit","unit","vis","VisLayout","visualisations","Array","isArray","child","id","main","Checkbox","label","species","type","checked","onChange","marginLeft","SelectionBlock","siteDataKeys","siteName","checkboxes","speciesName","checkedStatus","checkbox","header","DataSelector","state","selected","cloneDeep","dataKeys","handleInputChange","bind","callSelector","clearSelection","dataSelector","event","target","attributes","oldSelected","setState","subdict","subkey","blocks","block","buttons","betterButton","onClick","ControlPanel","headerText","headerTag","mainHeader","footer","href","rel","src","GitHubLogo","alt","GraphContainer","contRef","createRef","node","current","parentNode","clientHeight","clientWidth","updateDimensions","window","addEventListener","removeEventListener","ref","cloneElement","Dashboard","error","isLoaded","sidePanel","apiData","londonGHGSites","processData","toggleSidePanel","randomData","processedData","gas_data","selectedKeys","obj","speciesData","subObj","hasOwnProperty","totalSites","tableau10","length","concat","join","containerKey","nSites","selectedColours","slice","divID","getID","uuidv4","message","createGraphs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,WAAa,iCAAiC,UAAY,gCAAgC,KAAO,2BAA2B,WAAa,iCAAiC,OAAS,+B,mBCAvRD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,aAAe,iCAAiC,WAAa,+BAA+B,eAAiB,qC,gBCA7MD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,QAAU,8BAA8B,aAAe,qC,iBCA3JD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,WAAa,qC,+7uDCArHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAS,0BAA0B,SAAS,4B,gBCAvGD,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,utBCqFVC,E,uKAzEX,IANA,IAAMC,EAAOC,KAAKC,MAAMF,KAGpBG,EAAW,GACXC,EAAa,EAEjB,MAA+BC,OAAOC,QAAQN,GAA9C,eAAqD,CAAC,IAAD,sBAAzCO,EAAyC,KAAnCC,EAAmC,KAG7CC,EADeJ,OAAOK,KAAKF,GACHG,KAAI,SAACC,GAAD,OAAO,IAAIC,KAAKC,SAASF,OAErDG,EAAWV,OAAOW,OAAOR,GAEzBS,EAAOC,OAAOX,GAAMY,cAEpBC,EAAiBnB,KAAKC,MAAMmB,QAAQjB,GAGpCkB,EAAQ,CACZC,EAAGd,EACHe,EAAGT,EACHU,KAAM,QACNC,KAAM,CACJC,MAAO,EACPC,MARWR,GAAkC,SAU/CH,KAAMA,GAGRd,EAAS0B,KAAKP,GACdlB,IAGF,IAAM0B,EAAS,CACbC,MAAO,CACLC,KAAM/B,KAAKC,MAAM6B,MAAQ9B,KAAKC,MAAM6B,MAAQ,KAC5CE,KAAM,CACJC,KAAM,IAERC,QAAS,SACTX,EAAG,IACHY,QAAS,OAEXC,MAAO,CACLN,MAAO9B,KAAKC,MAAMoC,OAClBC,MAAOtC,KAAKC,MAAMsC,OAASvC,KAAKC,MAAMsC,OAAS,KAC/CC,UAAU,EACVC,UAAW,QACXC,UAAU,EACVC,MAAO,WAETC,MAAO,CACLd,MAAO9B,KAAKC,MAAM4C,OAClBP,MAAOtC,KAAKC,MAAM6C,OAAS9C,KAAKC,MAAM6C,OAAS,KAC/CN,UAAU,EACVC,UAAW,QACXC,UAAU,EACVC,MAAO,UACPI,UAAU,GAEZrB,MAAO1B,KAAKC,MAAMyB,MAClBsB,OAAQhD,KAAKC,MAAM+C,OACnBC,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,IAAK,IAIT,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CAAM1D,KAAMG,EAAU2B,OAAQA,U,GA3Ed6B,IAAMC,W,iDC4DfC,E,6KAxDX,IAHA,IAAMC,EAAQ7D,KAAKC,MAAM4D,MAErBC,EAAU,GACd,MAA2B1D,OAAOC,QAAQwD,GAA1C,eAAkD,CAAC,IAAD,sBAAtCE,EAAsC,KAAjCC,EAAiC,KAC1CC,EAAWD,EAAK,SAChBE,EAAYF,EAAK,UAEjBG,EAAW,UAAMJ,EAAN,aAAcE,EAAd,aAA2BC,GAEtCE,EAAW,CAACH,EAAUC,GAEtBG,EACJ,cAACC,EAAA,EAAD,CAA0BC,SAAUH,EAApC,SACE,cAACI,EAAA,EAAD,UACE,sBAAKjB,UAAWC,IAAOa,OAAvB,UACE,qBAAKd,UAAWC,IAAOiB,aAAvB,SACGxD,OAAO8C,GAAK7C,gBAEf,qBAAKqC,UAAWC,IAAOkB,WAAvB,SAAoCV,EAAK,YACzC,sBAAKT,UAAWC,IAAOmB,eAAvB,uBAAkDR,WAP3CA,GAafL,EAAQlC,KAAKyC,GAGf,OAAOP,I,+BAIP,IAAMA,EAAU9D,KAAK4E,eACfC,EAAO7E,KAAKC,MAAM4E,KAAO7E,KAAKC,MAAM4E,KAAO,EAK3CC,EAAQ,CAAEpD,MAHF1B,KAAKC,MAAMyB,MAAQ1B,KAAKC,MAAMyB,MAAQ,OAGtBsB,OAFfhD,KAAKC,MAAM+C,OAAShD,KAAKC,MAAM+C,OAAS,QAIvD,OACE,qBAAKO,UAAWC,IAAOC,UAAvB,SACE,eAACsB,EAAA,EAAD,CACEC,OAAQhF,KAAKC,MAAMgF,OACnBJ,KAAMA,EACNK,iBAAiB,EACjBJ,MAAOA,EAJT,UAME,cAACK,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELvB,W,GAtDcJ,IAAMC,WCKhB2B,G,6KAJX,OAAO,qBAAK/B,UAAU,UAAf,SAA0BvD,KAAKC,MAAMsF,e,GAF1B7B,IAAMC,YCwBb6B,G,6KAtBX,OACE,sBAAKjC,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uCACA,uBAFF,0BAKA,sBAAKA,UAAU,gBAAf,UACE,4CACA,uBAFF,aAKA,sBAAKA,UAAU,gBAAf,UACE,oCACA,uBAFF,sB,GAdeG,IAAMC,Y,iBCMd8B,E,uKAJX,OAAO,qBAAKlC,UAAWC,IAAOkC,KAAvB,SAA8B1F,KAAKC,MAAM0F,U,GAF9BjC,IAAMC,W,iBCmBbiC,E,uKAfX,IAAIC,EASJ,OAPEA,EADEC,MAAMC,QAAQ/F,KAAKC,MAAMsF,UACVvF,KAAKC,MAAMsF,SAAS7E,KAAI,SAACsF,GACxC,OAAO,cAAC,EAAD,CAAwBL,IAAKK,GAAfA,EAAMC,OAGZ,cAAC,EAAD,CAAsCN,IAAK3F,KAAKC,MAAMsF,UAAxCvF,KAAKC,MAAMsF,SAASU,IAInD,qBAAK1C,UAAWC,IAAO0C,KAAvB,SAA8BL,Q,GAZZnC,IAAMC,W,yBCiBfwC,E,uKAjBX,OACE,kCACE,+BAAOnG,KAAKC,MAAMmG,QAClB,uBACEpF,KAAMhB,KAAKC,MAAMe,KACjBV,KAAMN,KAAKC,MAAMK,KACjB+F,QAASrG,KAAKC,MAAMoG,QACpBC,KAAK,WACLC,QAASvG,KAAKC,MAAMsG,QACpBC,SAAUxG,KAAKC,MAAMuG,SACrB1B,MAAO,CAAE2B,WAAY,kB,GAZR/C,IAAMC,WCuCd+C,E,uKA7BX,IALA,IAAMC,EAAe3G,KAAKC,MAAM0G,aAC1BC,EAAW5G,KAAKC,MAAM2G,SAGxBC,EAAa,GACjB,MAAsBzG,OAAOK,KAAKkG,GAAlC,eAAiD,CAA5C,IAAMN,EAAO,KACVD,EAAK,UAAMQ,EAAN,YAAkBP,GACvBS,EAAc7F,OAAOoF,GAASnF,cAC9B6F,EAAgBJ,EAAaN,GAE7BW,EACJ,cAAC,EAAD,CACEZ,MAAOU,EACP9F,KAAMoF,EACN9F,KAAMsG,EACNP,QAASA,EACTE,QAASQ,EACTP,SAAUxG,KAAKC,MAAMuG,UAChBJ,GAITS,EAAWjF,KAAKoF,GAGlB,OACE,sBAAKzD,UAAWC,IAAOC,UAAvB,UACE,qBAAKF,UAAWC,IAAOyD,OAAvB,SAAgCjH,KAAKC,MAAM2G,WAC3C,qBAAKrD,UAAWC,IAAOqD,WAAvB,SAAoCA,W,GA/BfnD,IAAMC,W,iBC8EpBuD,E,kDA3Eb,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IAEDkH,MAAQ,CAAEC,SAAUC,oBAAU,EAAKpH,MAAMqH,WAC9C,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBANL,E,2DAUjBxH,KAAKC,MAAM0H,aAAa3H,KAAKmH,MAAMC,Y,wCAGnBQ,GAChB,IAAMC,EAASD,EAAMC,OACf7D,EAAwB,aAAhB6D,EAAOvB,KAAsBuB,EAAOtB,QAAUsB,EAAO7D,MAE7D1D,EAAOuH,EAAOC,WAAP,KAA0B9D,MACjCqC,EAAUwB,EAAOC,WAAP,QAA6B9D,MAGzC+D,EAAcV,oBAAUrH,KAAKmH,MAAMC,UAEvCW,EAAYzH,GAAM+F,GAAWrC,EAE7BhE,KAAKgI,SAAS,CAAEZ,SAAUW,M,uCAO1B,IAFA,IAAMX,EAAWpH,KAAKmH,MAAMC,SAE5B,MAA2BhH,OAAOC,QAAQ+G,GAA1C,eACE,IADoD,IAAD,sBAA3CrD,EAA2C,KAAtCkE,EAAsC,KACnD,MAAqB7H,OAAOK,KAAKwH,GAAjC,eAA2C,CAAtC,IAAMC,EAAM,KACfd,EAASrD,GAAKmE,IAAU,EAI5BlI,KAAKC,MAAM0H,aAAaP,K,+BASxB,IAHA,IAAIe,EAAS,GACPb,EAAWtH,KAAKmH,MAAMC,SAE5B,MAAmBhH,OAAOK,KAAK6G,GAA/B,eAA0C,CAArC,IAAMhH,EAAI,KACPsG,EAAW3F,OAAOX,GAAMY,cACxByF,EAAeW,EAAShH,GAExB8H,EACJ,cAAC,EAAD,CACEzB,aAAcA,EACdC,SAAUA,EACVJ,SAAUxG,KAAKuH,mBACVX,GAITuB,EAAOvG,KAAKwG,GAGd,OACE,sBAAK7E,UAAWC,IAAOC,UAAvB,UACE,qBAAKF,UAAWC,IAAO2E,OAAvB,SAAgCA,IAChC,sBAAK5E,UAAWC,IAAO6E,QAAvB,UACE,wBAAQ9E,UAAWC,IAAO8E,aAAcC,QAASvI,KAAKyH,aAAtD,kBACA,wBAAQlE,UAAWC,IAAO8E,aAAcC,QAASvI,KAAK0H,eAAtD,6B,GArEiBhE,IAAMC,W,iBCPlB,MAA0B,mCCsC1B6E,E,uKA7BX,OACE,sBAAKjF,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOyD,OAAvB,UACE,qBAAK1D,UAAWC,IAAOiF,WAAvB,uBACA,qBAAKlF,UAAWC,IAAOkF,UAAvB,+DAIF,sBAAKnF,UAAWC,IAAO0C,KAAvB,UACE,qBAAK3C,UAAWC,IAAOmF,WAAvB,mBACA,cAAC,EAAD,CACErB,SAAUtH,KAAKC,MAAMqH,SACrBK,aAAc3H,KAAKC,MAAM0H,kBAG7B,qBAAKpE,UAAWC,IAAOoF,OAAvB,SACE,mBACEC,KAAK,uCACLC,IAAI,aACJjB,OAAO,SAHT,SAKE,qBAAKkB,IAAKC,EAAYC,IAAI,2B,GAvBXvF,IAAMC,WCiClBuF,E,kDArCb,WAAYjJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDkH,MAAQ,CAAEzF,MAAO,IAAMsB,OAAQ,KACpC,EAAKmG,QAAUzF,IAAM0F,YAJJ,E,+DAQjB,IAAMC,EAAOrJ,KAAKmJ,QAAQG,QAC1B,GAAID,EAAM,CACR,IAAMrG,EAASqG,EAAKE,WAAWC,aACzB9H,EAAQ2H,EAAKE,WAAWE,YAC9BzJ,KAAKgI,SAAS,CAAEhF,OAAQA,EAAQtB,MAAOA,O,0CAKzC1B,KAAK0J,mBACLC,OAAOC,iBAAiB,SAAU5J,KAAK0J,iBAAiBlC,KAAKxH,S,6CAI7D2J,OAAOE,oBAAoB,SAAU7J,KAAK0J,iBAAiBlC,KAAKxH,S,+BAIhE,OACE,qBAAK8J,IAAK9J,KAAKmJ,QAAf,SACGzF,IAAMqG,aAAa/J,KAAKC,MAAMsF,SAAU,CACvCvC,OAAQhD,KAAKmH,MAAMnE,OACnBtB,MAAO1B,KAAKmH,MAAMzF,c,GA/BCgC,IAAMC,W,YC8OpBqG,E,kDA1Nb,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IAEDkH,MAAQ,CACX8C,MAAO,KACPC,UAAU,EACVC,WAAW,EACXC,QAAS,IAIX,EAAKjD,MAAMtD,MAAQwG,EAEnB,EAAKlD,MAAMiD,QAAU,EAAKE,cAE1B,EAAKC,gBAAkB,EAAKA,gBAAgB/C,KAArB,gBACvB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAK8C,YAAc,EAAKA,YAAY9C,KAAjB,gBAjBF,E,0DA6BjB,IANA,IAAMzH,EAAOyK,EAGTlD,EAAW,GACXmD,EAAgB,GAEpB,MAAmBrK,OAAOK,KAAKV,GAA/B,eAAsC,CAAjC,IAAMO,EAAI,KACbgH,EAAShH,GAAQ,GACjBmK,EAAcnK,GAAQ,GAEtB,cAAsBF,OAAOK,KAAKV,EAAKO,IAAvC,eAA+C,CAA1C,IAAM+F,EAAO,KAChBiB,EAAShH,GAAM+F,IAAW,EAE1B,IAAMqE,EAAW3K,EAAKO,GAAM+F,GAGtB7F,EADeJ,OAAOK,KAAKiK,GACHhK,KAAI,SAACC,GAAD,OAAO,IAAIC,KAAKC,SAASF,OAErDG,EAAWV,OAAOW,OAAO2J,GAG/BD,EAAcnK,GAAM+F,GAAW,CAC7B7F,SAAUA,EACVM,SAAUA,IAOhBd,KAAKmH,MAAMsD,cAAgBA,EAC3BzK,KAAKmH,MAAMG,SAAWA,I,mCAIXA,GACXtH,KAAKgI,SAAS,CAAE2C,aAAcrD,M,qCAI9B,IApEasD,EAoET/E,EAAiB,GAEf8E,EAAe3K,KAAKmH,MAAMwD,aAE5BE,EAAc,GAElB,GAAIF,EAAc,CAChB,cAA6BvK,OAAOC,QAAQsK,GAA5C,eACE,IAD0D,IAAD,sBAA/CrK,EAA+C,KAAzCwK,EAAyC,KACzD,MAA+B1K,OAAOC,QAAQyK,GAA9C,eAAuD,CAAC,IAAD,sBAA3CzE,EAA2C,KACrD,GADqD,KAC1C,CAET,IAAMtG,EAAOyK,EAAWlK,GAAM+F,GAEzBwE,EAAYE,eAAe1E,KAC9BwE,EAAYxE,GAAW,IAGzBwE,EAAYxE,GAAS/F,GAAQP,GAKnC,IAAIiL,EAAa,EAEXC,EAAY7J,EAAO,UAEzB,GA9FWwJ,EA8FEC,EA7FkB,IAA5BzK,OAAOK,KAAKmK,GAAKM,OA8FlB,cAAkC9K,OAAOC,QAAQwK,GAAjD,eAA+D,CAAC,IAAD,sBAAnDxE,EAAmD,KAA1C9F,EAA0C,KAEvDuB,EAAQb,OAAOoF,GAASnF,cACxB6C,EAAMjC,EAAMqJ,OAAO,IAAK/K,OAAOK,KAAKF,GAAU6K,KAAK,MACnDC,EAAY,oBAAgBtH,GAE5BuH,EAASlL,OAAOK,KAAKF,GAAU2K,OAE/BK,EAAkBN,EAAUO,MAChCR,EACAA,EAAaM,GAOT3F,EACJ,cAAC,EAAD,UACE,cAAC,EAAD,CACE8F,MAAOzL,KAAK0L,QACZ3L,KAAMQ,EACNa,QAASmK,EACTzJ,MAAOA,EACPO,OAAO,OACPQ,OAAO,iBACFkB,IARYsH,GAavBxF,EAAejE,KAAK+D,GAEpBqF,GAAcM,GAKpB,OAAOzF,I,2EA0BP,MAAO,UAAY8F,gB,wCAInB3L,KAAKgI,SAAS,CAAEmC,WAAYnK,KAAKmH,MAAMgD,c,+BAG/B,IAAD,EACmBnK,KAAKmH,MAAzB8C,EADC,EACDA,MADC,EACMC,SAMb,OAFW,EAEPD,EACK,0CAAaA,EAAM2B,WAKxB,sBAAKrI,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKgF,QAASvI,KAAKuK,gBAAiBhH,UAAU,WAA9C,SACE,0BAFJ,yBAMA,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CACE+D,SAAUtH,KAAKmH,MAAMG,SACrBK,aAAc3H,KAAK2H,iBAGvB,sBAAKpE,UAAU,aAAf,UACE,cAAC,EAAD,CACEkI,MAAOzL,KAAK0L,QACZ7H,MAAO7D,KAAKmH,MAAMtD,MAClBoB,OAAQ,CAAC,MAAO,OAChBJ,KAAM,GACNnD,MAAO,OACPsB,OAAQ,SAEV,cAAC,EAAD,UACE,2SASF,cAAC,EAAD,IAEA,cAAC,EAAD,UAAYhD,KAAK6L,8B,GAlNPnI,IAAMC,WCTfmI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1939c10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlPanel_container__Z5LXb\",\"header\":\"ControlPanel_header__1QsP1\",\"headerText\":\"ControlPanel_headerText__1vciO\",\"headerTag\":\"ControlPanel_headerTag__2tt5R\",\"main\":\"ControlPanel_main__28E1L\",\"mainHeader\":\"ControlPanel_mainHeader__61ljS\",\"footer\":\"ControlPanel_footer__18lR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeafletMap_container__U80i5\",\"marker\":\"LeafletMap_marker__3ZCgD\",\"markerHeader\":\"LeafletMap_markerHeader__2sTlO\",\"markerBody\":\"LeafletMap_markerBody__1hyES\",\"markerLocation\":\"LeafletMap_markerLocation__3fFsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DataSelector_container__1LlIx\",\"blocks\":\"DataSelector_blocks__2Gmnk\",\"buttons\":\"DataSelector_buttons__1wHlV\",\"betterButton\":\"DataSelector_betterButton__3tuu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectionBlock_container__2wOup\",\"header\":\"SelectionBlock_header__xFx_4\",\"checkboxes\":\"SelectionBlock_checkboxes__Ipl0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LineChart_container__1xvez\",\"x-axis\":\"LineChart_x-axis__1LjG1\",\"y-axis\":\"LineChart_y-axis__18kha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"VisUnit_unit__3bFN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"VisLayout_main__1T9_C\"};","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nimport styles from \"./LineChart.module.css\";\n\nclass LineChart extends React.Component {\n  render() {\n    const data = this.props.data;\n\n    // Data keyed by site\n    let plotData = [];\n    let siteNumber = 0;\n\n    for (const [site, siteData] of Object.entries(data)) {\n      // We want to conver UNIX ms timestamps to Dates\n      const x_timestamps = Object.keys(siteData);\n      const x_values = x_timestamps.map((d) => new Date(parseInt(d)));\n      // Extract the count values\n      const y_values = Object.values(siteData);\n\n      const name = String(site).toUpperCase();\n\n      const selectedColour = this.props.colours[siteNumber];\n      const colour = selectedColour ? selectedColour : \"black\";\n\n      const trace = {\n        x: x_values,\n        y: y_values,\n        mode: \"lines\",\n        line: {\n          width: 1,\n          color: colour,\n        },\n        name: name,\n      };\n\n      plotData.push(trace);\n      siteNumber++;\n    }\n\n    const layout = {\n      title: {\n        text: this.props.title ? this.props.title : null,\n        font: {\n          size: 16,\n        },\n        xanchor: \"center\",\n        y: 0.97,\n        yanchor: \"top\",\n      },\n      xaxis: {\n        title: this.props.xLabel,\n        range: this.props.xRange ? this.props.xRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n      },\n      yaxis: {\n        title: this.props.yLabel,\n        range: this.props.yRange ? this.props.yRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n        zeroline: false,\n      },\n      width: this.props.width,\n      height: this.props.height,\n      margin: {\n        l: 60,\n        r: 40,\n        b: 30,\n        t: 20,\n        pad: 5,\n      },\n    };\n\n    return (\n      <div className={styles.container}>\n        <Plot data={plotData} layout={layout} />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport styles from \"./LeafletMap.module.css\";\n\nclass LeafletMap extends React.Component {\n  processSites() {\n    const sites = this.props.sites;\n\n    let markers = [];\n    for (const [key, value] of Object.entries(sites)) {\n      const latitude = value[\"latitude\"];\n      const longitude = value[\"longitude\"];\n\n      const locationStr = `${key}, ${latitude}, ${longitude}`;\n\n      const location = [latitude, longitude];\n\n      const marker = (\n        <Marker key={locationStr} position={location}>\n          <Popup>\n            <div className={styles.marker}>\n              <div className={styles.markerHeader}>\n                {String(key).toUpperCase()}\n              </div>\n              <div className={styles.markerBody}>{value[\"long_name\"]}</div>\n              <div className={styles.markerLocation}>Location: {locationStr}</div>\n            </div>\n          </Popup>\n        </Marker>\n      );\n\n      markers.push(marker);\n    }\n\n    return markers;\n  }\n\n  render() {\n    const markers = this.processSites();\n    const zoom = this.props.zoom ? this.props.zoom : 5;\n\n    const width = this.props.width ? this.props.width : \"60vw\";\n    const height = this.props.height ? this.props.height : \"40vh\";\n\n    const style = { width: width, height: height };\n\n    return (\n      <div className={styles.container}>\n        <MapContainer\n          center={this.props.centre}\n          zoom={zoom}\n          scrollWheelZoom={true}\n          style={style}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {markers}\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nexport default LeafletMap;\n","import React from \"react\";\nimport \"./Summary.css\";\n\nclass Summary extends React.Component {\n  render() {\n    return <div className=\"summary\">{this.props.children}</div>;\n  }\n}\n\nexport default Summary;\n","import React from \"react\";\nimport \"./Overview.css\";\n\nclass Overview extends React.Component {\n  render() {\n    return (\n      <div className=\"overview\">\n        <div className=\"overview-card\">\n          <b>London</b>\n          <br />\n          Temperature: 13°C\n        </div>\n        <div className=\"overview-card\">\n          <b>Air quality</b>\n          <br />\n          AQI: 55\n        </div>\n        <div className=\"overview-card\">\n          <b>CO2</b>\n          <br />\n          409.8 ppm\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import React from \"react\";\nimport styles from \"./VisUnit.module.css\";\n\nclass VisUnit extends React.Component {\n  render() {\n    return <div className={styles.unit}>{this.props.vis}</div>;\n  }\n}\n\nexport default VisUnit;\n","import React from \"react\";\nimport VisUnit from \"../VisUnit/VisUnit\";\n\nimport styles from \"./VisLayout.module.css\";\n\nclass VisLayout extends React.Component {\n  render() {\n    let visualisations;\n    if (Array.isArray(this.props.children)) {\n      visualisations = this.props.children.map((child) => {\n        return <VisUnit key={child.id} vis={child} />;\n      });\n    } else {\n      visualisations = <VisUnit key={this.props.children.id} vis={this.props.children} />;\n    }\n\n    return (\n      <div className={styles.main}>{visualisations}</div>\n    );\n  }\n}\n\nexport default VisLayout;\n","import React from \"react\";\n// import \"./Checkbox.css\";\n\nclass Checkbox extends React.Component {\n  render() {\n    return (\n      <label>\n        <span>{this.props.label}</span>\n        <input\n          name={this.props.name}\n          site={this.props.site}\n          species={this.props.species}\n          type=\"checkbox\"\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n          style={{ marginLeft: \"0.5vw\" }}\n        />\n      </label>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from \"react\";\nimport styles from \"./SelectionBlock.module.css\";\n\nimport Checkbox from \"../Checkbox/Checkbox\";\n\nclass SelectionBlock extends React.Component {\n  render() {\n      // This just has the data for this specific site\n    const siteDataKeys = this.props.siteDataKeys;\n    const siteName = this.props.siteName;\n\n\n    let checkboxes = [];\n    for (const species of Object.keys(siteDataKeys)) {\n      const label = `${siteName}_${species}`;\n      const speciesName = String(species).toUpperCase();\n      const checkedStatus = siteDataKeys[species];\n\n      const checkbox = (\n        <Checkbox\n          label={speciesName}\n          name={label}\n          site={siteName}\n          species={species}\n          checked={checkedStatus}\n          onChange={this.props.onChange}\n          key={label}\n        />\n      );\n\n      checkboxes.push(checkbox);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>{this.props.siteName}</div>\n        <div className={styles.checkboxes}>{checkboxes}</div>\n      </div>\n    );\n  }\n}\n\nexport default SelectionBlock;\n","import React from \"react\";\n// import styles from \"./ControlPanel.module.css\";\nimport { cloneDeep } from \"lodash\";\nimport SelectionBlock from \"../SelectionBlock/SelectionBlock\";\n\nimport styles from \"./DataSelector.module.css\";\n\nclass DataSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { selected: cloneDeep(this.props.dataKeys) };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.callSelector = this.callSelector.bind(this);\n    this.clearSelection = this.clearSelection.bind(this);\n  }\n\n  callSelector() {\n    this.props.dataSelector(this.state.selected);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    const site = target.attributes[\"site\"].value;\n    const species = target.attributes[\"species\"].value;\n\n    // Update the state to have the new\n    let oldSelected = cloneDeep(this.state.selected);\n\n    oldSelected[site][species] = value;\n\n    this.setState({ selected: oldSelected });\n  }\n\n  clearSelection() {\n    // Clear all\n    const selected = this.state.selected;\n\n    for (let [key, subdict] of Object.entries(selected)) {\n      for (const subkey of Object.keys(subdict)) {\n        selected[key][subkey] = false;\n      }\n    }\n\n    this.props.dataSelector(selected);\n\n    // Also need to clear all checkboxes\n  }\n\n  render() {\n    let blocks = [];\n    const dataKeys = this.state.selected;\n\n    for (const site of Object.keys(dataKeys)) {\n      const siteName = String(site).toUpperCase();\n      const siteDataKeys = dataKeys[site];\n\n      const block = (\n        <SelectionBlock\n          siteDataKeys={siteDataKeys}\n          siteName={siteName}\n          onChange={this.handleInputChange}\n          key={siteName}\n        ></SelectionBlock>\n      );\n\n      blocks.push(block);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.blocks}>{blocks}</div>\n        <div className={styles.buttons}>\n          <button className={styles.betterButton} onClick={this.callSelector}>Plot</button>\n          <button className={styles.betterButton} onClick={this.clearSelection}>Clear</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSelector;\n","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","import React from \"react\";\n\nimport DataSelector from \"../DataSelector/DataSelector\";\nimport styles from \"./ControlPanel.module.css\";\n\nimport GitHubLogo from \"../../images/github.svg\";\n\nclass ControlPanel extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <div className={styles.headerText}>LondonGHG</div>\n          <div className={styles.headerTag}>\n            A new system for estimating London's emissions\n          </div>\n        </div>\n        <div className={styles.main}>\n          <div className={styles.mainHeader}>Sites</div>\n          <DataSelector\n            dataKeys={this.props.dataKeys}\n            dataSelector={this.props.dataSelector}\n          />\n        </div>\n        <div className={styles.footer}>\n          <a\n            href=\"https://github.com/openghg/dashboard\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            <img src={GitHubLogo} alt=\"GitHub logo\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React from \"react\";\n\nclass GraphContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set the initial size of the plot\n    this.state = { width: 1000, height: 250 };\n    this.contRef = React.createRef();\n  }\n\n  updateDimensions() {\n    const node = this.contRef.current;\n    if (node) {\n      const height = node.parentNode.clientHeight;\n      const width = node.parentNode.clientWidth;\n      this.setState({ height: height, width: width });\n    }\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <div ref={this.contRef}>\n        {React.cloneElement(this.props.children, {\n          height: this.state.height,\n          width: this.state.width,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default GraphContainer;\n","import \"./Dashboard.css\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport randomData from \"./mock/randomSiteData.json\";\nimport londonGHGSites from \"./data/siteData.json\";\n\nimport LineChart from \"./components/LineChart/LineChart\";\nimport LeafletMap from \"./components/LeafletMap/LeafletMap\";\nimport Summary from \"./components/Summary/Summary\";\nimport Overview from \"./components/Overview/Overview\";\nimport VisLayout from \"./components/VisLayout/VisLayout\";\nimport ControlPanel from \"./components/ControlPanel/ControlPanel\";\nimport GraphContainer from \"./components/GraphContainer/GraphContainer\";\n\nimport colours from \"./data/colours.json\";\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      sidePanel: false,\n      apiData: [],\n    };\n\n    // For the moment create some fake sites\n    this.state.sites = londonGHGSites;\n    // This data will come from a function but for now just read it in\n    this.state.apiData = this.processData();\n\n    this.toggleSidePanel = this.toggleSidePanel.bind(this);\n    this.dataSelector = this.dataSelector.bind(this);\n    this.processData = this.processData.bind(this);\n  }\n\n  // Need a function to process the data that's keyed\n  processData() {\n    // const data = this.state.apiData;\n    const data = randomData;\n\n    // Process the data and create the correct Javascript time objects\n    let dataKeys = {};\n    let processedData = {};\n\n    for (const site of Object.keys(data)) {\n      dataKeys[site] = {};\n      processedData[site] = {};\n\n      for (const species of Object.keys(data[site])) {\n        dataKeys[site][species] = false;\n\n        const gas_data = data[site][species];\n\n        const x_timestamps = Object.keys(gas_data);\n        const x_values = x_timestamps.map((d) => new Date(parseInt(d)));\n        // Extract the count values\n        const y_values = Object.values(gas_data);\n\n        // Create a structure that plotly expects\n        processedData[site][species] = {\n          x_values: x_values,\n          y_values: y_values,\n        };\n      }\n    }\n\n    // Disabled the no direct mutation rule here as this only gets called from the ctor\n    /* eslint-disable react/no-direct-mutation-state */\n    this.state.processedData = processedData;\n    this.state.dataKeys = dataKeys;\n    /* eslint-enable react/no-direct-mutation-state */\n  }\n\n  dataSelector(dataKeys) {\n    this.setState({ selectedKeys: dataKeys });\n  }\n\n  createGraphs() {\n    let visualisations = [];\n\n    const selectedKeys = this.state.selectedKeys;\n\n    let speciesData = {};\n\n    if (selectedKeys) {\n      for (const [site, subObj] of Object.entries(selectedKeys)) {\n        for (const [species, value] of Object.entries(subObj)) {\n          if (value) {\n            // Create a visualisation and add it to the list\n            const data = randomData[site][species];\n\n            if (!speciesData.hasOwnProperty(species)) {\n              speciesData[species] = {};\n            }\n\n            speciesData[species][site] = data;\n          }\n        }\n      }\n\n      let totalSites = 0;\n\n      const tableau10 = colours[\"tableau10\"];\n\n      if (!isEmpty(speciesData)) {\n        for (const [species, siteData] of Object.entries(speciesData)) {\n          // Create a graph for each species\n          const title = String(species).toUpperCase();\n          const key = title.concat(\"-\", Object.keys(siteData).join(\"-\"));\n          const containerKey = `container-${key}`;\n\n          const nSites = Object.keys(siteData).length;\n\n          const selectedColours = tableau10.slice(\n            totalSites,\n            totalSites + nSites\n          );\n\n        //   for (let i = 0; i < nSites; i++) {\n        //     tableau10.push(tableau10.shift());\n        //   }\n\n          const vis = (\n            <GraphContainer key={containerKey}>\n              <LineChart\n                divID={this.getID()}\n                data={siteData}\n                colours={selectedColours}\n                title={title}\n                xLabel=\"Date\"\n                yLabel=\"Concentration\"\n                key={key}\n              />\n            </GraphContainer>\n          );\n\n          visualisations.push(vis);\n\n          totalSites += nSites;\n        }\n      }\n    }\n\n    return visualisations;\n  }\n\n  componentDidMount() {\n    // const apiURL = \"\";\n    // fetch(apiURL)\n    //   .then((res) => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         weatherData: result,\n    //         // or apiData\n    //       });\n    //     },\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error,\n    //       });\n    //     }\n    //   );\n  }\n\n  getID() {\n    // Create a unique ID for each visualisation\n    return \"vis-id-\" + uuidv4();\n  }\n\n  toggleSidePanel() {\n    this.setState({ sidePanel: !this.state.sidePanel });\n  }\n\n  render() {\n    let { error, isLoaded } = this.state;\n\n    // Just set this as true for now as we're not pulling anything\n    // from an API\n    isLoaded = true;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"grid-container\">\n          <div className=\"header\">\n            <div onClick={this.toggleSidePanel} className=\"nav-icon\">\n              <div></div>\n            </div>\n            LondonGHG Dashboard\n          </div>\n          <div className=\"main\">\n            <div className=\"main-side\">\n              <ControlPanel\n                dataKeys={this.state.dataKeys}\n                dataSelector={this.dataSelector}\n              />\n            </div>\n            <div className=\"main-panel\">\n              <LeafletMap\n                divID={this.getID()}\n                sites={this.state.sites}\n                centre={[51.5, -0.0482]}\n                zoom={11}\n                width={\"75vw\"}\n                height={\"65vh\"}\n              />\n              <Summary>\n                <div>\n                  To tackle climate change, we need to measure and reduce carbon\n                  emissions. London GHG is installing a new network of\n                  atmospheric measurements across the capital, and developing a\n                  new modelling framework to provide emission estimates of\n                  carbon dioxide and methane.\n                </div>\n              </Summary>\n\n              <Overview />\n\n              <VisLayout>{this.createGraphs()}</VisLayout>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}