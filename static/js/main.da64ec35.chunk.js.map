{"version":3,"sources":["components/SliderMap/SliderMap.module.css","components/ControlPanel/ControlPanel.module.css","components/DataSelector/DataSelector.module.css","components/VisLayout/VisLayout.module.css","components/SelectionBlock/SelectionBlock.module.css","components/Checkbox/Checkbox.module.css","components/FootprintAnalysis/FootprintAnalysis.module.css","components/LineChart/LineChart.module.css","components/VisUnit/VisUnit.module.css","images/londonFootprints/TMB sync nonrecursive //.svg$","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T20:00:00.svg","components/LineChart/LineChart.js","components/Overview/Overview.js","components/VisUnit/VisUnit.js","components/VisLayout/VisLayout.js","components/Checkbox/Checkbox.js","components/SelectionBlock/SelectionBlock.js","components/DataSelector/DataSelector.js","images/github.svg","components/ControlPanel/ControlPanel.js","components/GraphContainer/GraphContainer.js","components/SliderMap/SliderMap.js","util/helpers.js","components/FootprintAnalysis/FootprintAnalysis.js","Dashboard.js","reportWebVitals.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","LineChart","data","this","props","plotData","siteNumber","maxY","minY","Infinity","entries","site","siteData","xValues","yValues","max","Math","min","name","String","toUpperCase","selectedColour","colours","trace","x","y","mode","line","width","color","push","dateMarkObject","selectedDate","date","Date","parseInt","type","x0","y0","x1","y1","layout","title","text","font","size","xanchor","yanchor","xaxis","range","xRange","showgrid","linecolor","autotick","ticks","yaxis","automargin","yLabel","standoff","yRange","zeroline","height","margin","l","r","b","t","pad","shapes","data-testid","className","styles","container","React","Component","Overview","VisUnit","testid","unit","vis","VisLayout","visualisations","Array","isArray","children","child","key","concat","plotStyle","main","slimPlot","mainSlim","content","Checkbox","label","box","species","checked","onChange","style","marginLeft","SelectionBlock","siteDataKeys","siteName","checkboxes","speciesName","checkedStatus","checkbox","header","DataSelector","state","selected","cloneDeep","dataKeys","handleInputChange","bind","callSelector","clearSelection","event","target","value","attributes","oldSelected","setState","dataSelector","subdict","subkey","blocks","block","buttons","betterButton","onClick","ControlPanel","plotType","mainHeader","headerText","headerTag","plotSelector","selectPlotType","plottingInterface","footer","href","rel","src","GitHubLogo","alt","GraphContainer","contRef","createRef","node","current","parentNode","clientHeight","clientWidth","updateDimensions","window","addEventListener","removeEventListener","ref","cloneElement","SliderMap","startDate","dates","handleDateChange","layerRef","timestamp","dateSelector","sites","showSites","markers","lat","long","longName","locationStr","measurement","colour","circleKey","nanoid","circle","CircleMarker","center","radius","fillOpacity","fillColor","stroke","Popup","marker","markerHeader","markerBody","currentDate","toLocaleDateString","markerLocation","endDate","length","nDates","marks","dateInt","dateString","toISOString","Slider","defaultValue","aria-labelledby","step","zoom","imgOverlay","overlayImg","overlayBounds","imgPath","bounds","ImageOverlay","url","opacity","zIndex","mapBox","MapContainer","centre","scrollWheelZoom","TileLayer","attribution","LayerGroup","createMarkerLayer","sliderSection","sliderContainer","createSlider","dateContainer","toLocaleString","isEmpty","obj","FootprintAnalysis","footprints","requiredSVGs","require","paths","path","filename","split","timestampStr","getTime","error","console","importSVGs","sort","measurementData","selectedKeys","TMB","CO2","CH4","speciesData","subObj","hasOwnProperty","totalSites","tableau10","join","containerKey","nSites","selectedColours","slice","xLabel","footprintImg","plots","createGraphs","TMBData","NPLData","BTTData","Dashboard","isLoaded","sidePanel","processedData","footprintView","emptySelection","londonGHGSites","apiData","processData","toggleSidePanel","gas_data","x_values","d","y_values","values","divID","anySelected","message","plotHeader","createPlots","plotAdvice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,0BAA0B,cAAgB,iCAAiC,OAAS,0BAA0B,aAAe,gCAAgC,WAAa,8BAA8B,eAAiB,kCAAkC,gBAAkB,mCAAmC,cAAgB,mC,gBCApYD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,WAAa,iCAAiC,UAAY,gCAAgC,KAAO,2BAA2B,aAAe,mCAAmC,WAAa,iCAAiC,OAAS,+B,mBCAzUD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,QAAU,8BAA8B,aAAe,qC,sdCA3JD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,KAAO,wBAAwB,OAAS,0BAA0B,SAAW,8B,gBCApID,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,WAAa,qC,gBCArHD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,IAAM,wB,gBCAtFD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,IAAM,+BAA+B,MAAQ,mC,kqMCAhHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAS,0BAA0B,SAAS,4B,gBCAvGD,EAAOC,QAAU,CAAC,KAAO,wB,64hhBCDzB,IAAIC,EAAM,CACT,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,KAIrD,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,6BC/MpB,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA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","file":"static/js/main.da64ec35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SliderMap_container__2VjSi\",\"mapBox\":\"SliderMap_mapBox__O_dZn\",\"sliderSection\":\"SliderMap_sliderSection__lH5BT\",\"marker\":\"SliderMap_marker__YdM0E\",\"markerHeader\":\"SliderMap_markerHeader__1LrDT\",\"markerBody\":\"SliderMap_markerBody__3GXWW\",\"markerLocation\":\"SliderMap_markerLocation____0O7\",\"sliderContainer\":\"SliderMap_sliderContainer__2OJrc\",\"dateContainer\":\"SliderMap_dateContainer__1qhlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlPanel_container__Z5LXb\",\"header\":\"ControlPanel_header__1QsP1\",\"headerText\":\"ControlPanel_headerText__1vciO\",\"headerTag\":\"ControlPanel_headerTag__2tt5R\",\"main\":\"ControlPanel_main__28E1L\",\"plotSelector\":\"ControlPanel_plotSelector__1sckh\",\"mainHeader\":\"ControlPanel_mainHeader__61ljS\",\"footer\":\"ControlPanel_footer__18lR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DataSelector_container__1LlIx\",\"blocks\":\"DataSelector_blocks__2Gmnk\",\"buttons\":\"DataSelector_buttons__1wHlV\",\"betterButton\":\"DataSelector_betterButton__3tuu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"VisLayout_content__3mt76\",\"main\":\"VisLayout_main__1T9_C\",\"header\":\"VisLayout_header__3fTN4\",\"mainSlim\":\"VisLayout_mainSlim__27hUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectionBlock_container__2wOup\",\"header\":\"SelectionBlock_header__xFx_4\",\"checkboxes\":\"SelectionBlock_checkboxes__Ipl0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Checkbox_main__2q4NV\",\"label\":\"Checkbox_label__2R9H7\",\"box\":\"Checkbox_box__3uOa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FootprintAnalysis_container__K0ynd\",\"map\":\"FootprintAnalysis_map__XXCBQ\",\"plots\":\"FootprintAnalysis_plots__ifwSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LineChart_container__1xvez\",\"x-axis\":\"LineChart_x-axis__1LjG1\",\"y-axis\":\"LineChart_y-axis__18kha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"VisUnit_unit__3bFN-\"};","var map = {\n\t\"./londonHighResFootprint_2020-08-01T00:00:00.svg\": 71,\n\t\"./londonHighResFootprint_2020-08-01T04:00:00.svg\": 72,\n\t\"./londonHighResFootprint_2020-08-01T08:00:00.svg\": 73,\n\t\"./londonHighResFootprint_2020-08-01T12:00:00.svg\": 74,\n\t\"./londonHighResFootprint_2020-08-01T16:00:00.svg\": 75,\n\t\"./londonHighResFootprint_2020-08-01T20:00:00.svg\": 76,\n\t\"./londonHighResFootprint_2020-08-02T00:00:00.svg\": 77,\n\t\"./londonHighResFootprint_2020-08-02T04:00:00.svg\": 78,\n\t\"./londonHighResFootprint_2020-08-02T08:00:00.svg\": 79,\n\t\"./londonHighResFootprint_2020-08-02T12:00:00.svg\": 80,\n\t\"./londonHighResFootprint_2020-08-02T16:00:00.svg\": 81,\n\t\"./londonHighResFootprint_2020-08-02T20:00:00.svg\": 82,\n\t\"./londonHighResFootprint_2020-08-03T00:00:00.svg\": 83,\n\t\"./londonHighResFootprint_2020-08-03T04:00:00.svg\": 84,\n\t\"./londonHighResFootprint_2020-08-03T08:00:00.svg\": 85,\n\t\"./londonHighResFootprint_2020-08-03T12:00:00.svg\": 86,\n\t\"./londonHighResFootprint_2020-08-03T16:00:00.svg\": 87,\n\t\"./londonHighResFootprint_2020-08-03T20:00:00.svg\": 88,\n\t\"./londonHighResFootprint_2020-08-04T00:00:00.svg\": 89,\n\t\"./londonHighResFootprint_2020-08-04T04:00:00.svg\": 90,\n\t\"./londonHighResFootprint_2020-08-04T08:00:00.svg\": 91,\n\t\"./londonHighResFootprint_2020-08-04T12:00:00.svg\": 92,\n\t\"./londonHighResFootprint_2020-08-04T16:00:00.svg\": 93,\n\t\"./londonHighResFootprint_2020-08-04T20:00:00.svg\": 94,\n\t\"./londonHighResFootprint_2020-08-05T00:00:00.svg\": 95,\n\t\"./londonHighResFootprint_2020-08-05T04:00:00.svg\": 96,\n\t\"./londonHighResFootprint_2020-08-05T08:00:00.svg\": 97,\n\t\"./londonHighResFootprint_2020-08-05T12:00:00.svg\": 98,\n\t\"./londonHighResFootprint_2020-08-05T16:00:00.svg\": 99,\n\t\"./londonHighResFootprint_2020-08-05T20:00:00.svg\": 100,\n\t\"./londonHighResFootprint_2020-08-06T00:00:00.svg\": 101,\n\t\"./londonHighResFootprint_2020-08-06T04:00:00.svg\": 102,\n\t\"./londonHighResFootprint_2020-08-06T08:00:00.svg\": 103,\n\t\"./londonHighResFootprint_2020-08-06T12:00:00.svg\": 104,\n\t\"./londonHighResFootprint_2020-08-06T16:00:00.svg\": 105,\n\t\"./londonHighResFootprint_2020-08-06T20:00:00.svg\": 106,\n\t\"./londonHighResFootprint_2020-08-07T00:00:00.svg\": 107,\n\t\"./londonHighResFootprint_2020-08-07T04:00:00.svg\": 108,\n\t\"./londonHighResFootprint_2020-08-07T08:00:00.svg\": 109,\n\t\"./londonHighResFootprint_2020-08-07T12:00:00.svg\": 110,\n\t\"./londonHighResFootprint_2020-08-07T16:00:00.svg\": 111,\n\t\"./londonHighResFootprint_2020-08-07T20:00:00.svg\": 112,\n\t\"./londonHighResFootprint_2020-08-08T00:00:00.svg\": 113,\n\t\"./londonHighResFootprint_2020-08-08T04:00:00.svg\": 114,\n\t\"./londonHighResFootprint_2020-08-08T08:00:00.svg\": 115,\n\t\"./londonHighResFootprint_2020-08-08T12:00:00.svg\": 116,\n\t\"./londonHighResFootprint_2020-08-08T16:00:00.svg\": 117,\n\t\"./londonHighResFootprint_2020-08-08T20:00:00.svg\": 118,\n\t\"./londonHighResFootprint_2020-08-09T00:00:00.svg\": 119,\n\t\"./londonHighResFootprint_2020-08-09T04:00:00.svg\": 120,\n\t\"./londonHighResFootprint_2020-08-09T08:00:00.svg\": 121,\n\t\"./londonHighResFootprint_2020-08-09T12:00:00.svg\": 122,\n\t\"./londonHighResFootprint_2020-08-09T16:00:00.svg\": 123,\n\t\"./londonHighResFootprint_2020-08-09T20:00:00.svg\": 124,\n\t\"./londonHighResFootprint_2020-08-10T00:00:00.svg\": 125,\n\t\"./londonHighResFootprint_2020-08-10T04:00:00.svg\": 126,\n\t\"./londonHighResFootprint_2020-08-10T08:00:00.svg\": 127,\n\t\"./londonHighResFootprint_2020-08-10T12:00:00.svg\": 128,\n\t\"./londonHighResFootprint_2020-08-10T16:00:00.svg\": 129,\n\t\"./londonHighResFootprint_2020-08-10T20:00:00.svg\": 130,\n\t\"./londonHighResFootprint_2020-08-11T00:00:00.svg\": 131,\n\t\"./londonHighResFootprint_2020-08-11T04:00:00.svg\": 132,\n\t\"./londonHighResFootprint_2020-08-11T08:00:00.svg\": 133,\n\t\"./londonHighResFootprint_2020-08-11T12:00:00.svg\": 134,\n\t\"./londonHighResFootprint_2020-08-11T16:00:00.svg\": 135,\n\t\"./londonHighResFootprint_2020-08-11T20:00:00.svg\": 136,\n\t\"./londonHighResFootprint_2020-08-12T00:00:00.svg\": 137,\n\t\"./londonHighResFootprint_2020-08-12T04:00:00.svg\": 138,\n\t\"./londonHighResFootprint_2020-08-12T08:00:00.svg\": 139,\n\t\"./londonHighResFootprint_2020-08-12T12:00:00.svg\": 140,\n\t\"./londonHighResFootprint_2020-08-12T16:00:00.svg\": 141,\n\t\"./londonHighResFootprint_2020-08-12T20:00:00.svg\": 142,\n\t\"./londonHighResFootprint_2020-08-13T00:00:00.svg\": 143,\n\t\"./londonHighResFootprint_2020-08-13T04:00:00.svg\": 144,\n\t\"./londonHighResFootprint_2020-08-13T08:00:00.svg\": 145,\n\t\"./londonHighResFootprint_2020-08-13T12:00:00.svg\": 146,\n\t\"./londonHighResFootprint_2020-08-13T16:00:00.svg\": 147,\n\t\"./londonHighResFootprint_2020-08-13T20:00:00.svg\": 148,\n\t\"./londonHighResFootprint_2020-08-14T00:00:00.svg\": 149,\n\t\"./londonHighResFootprint_2020-08-14T04:00:00.svg\": 150,\n\t\"./londonHighResFootprint_2020-08-14T08:00:00.svg\": 151,\n\t\"./londonHighResFootprint_2020-08-14T12:00:00.svg\": 152,\n\t\"./londonHighResFootprint_2020-08-14T16:00:00.svg\": 153,\n\t\"./londonHighResFootprint_2020-08-14T20:00:00.svg\": 154,\n\t\"./londonHighResFootprint_2020-08-15T00:00:00.svg\": 155,\n\t\"./londonHighResFootprint_2020-08-15T04:00:00.svg\": 156,\n\t\"./londonHighResFootprint_2020-08-15T08:00:00.svg\": 157,\n\t\"./londonHighResFootprint_2020-08-15T12:00:00.svg\": 158,\n\t\"./londonHighResFootprint_2020-08-15T16:00:00.svg\": 159,\n\t\"./londonHighResFootprint_2020-08-15T20:00:00.svg\": 160,\n\t\"./londonHighResFootprint_2020-08-16T00:00:00.svg\": 161,\n\t\"./londonHighResFootprint_2020-08-16T04:00:00.svg\": 162,\n\t\"./londonHighResFootprint_2020-08-16T08:00:00.svg\": 163,\n\t\"./londonHighResFootprint_2020-08-16T12:00:00.svg\": 164,\n\t\"./londonHighResFootprint_2020-08-16T16:00:00.svg\": 165,\n\t\"./londonHighResFootprint_2020-08-16T20:00:00.svg\": 166,\n\t\"./londonHighResFootprint_2020-08-17T00:00:00.svg\": 167,\n\t\"./londonHighResFootprint_2020-08-17T04:00:00.svg\": 168,\n\t\"./londonHighResFootprint_2020-08-17T08:00:00.svg\": 169,\n\t\"./londonHighResFootprint_2020-08-17T12:00:00.svg\": 170,\n\t\"./londonHighResFootprint_2020-08-17T16:00:00.svg\": 171,\n\t\"./londonHighResFootprint_2020-08-17T20:00:00.svg\": 172,\n\t\"./londonHighResFootprint_2020-08-18T00:00:00.svg\": 173,\n\t\"./londonHighResFootprint_2020-08-18T04:00:00.svg\": 174,\n\t\"./londonHighResFootprint_2020-08-18T08:00:00.svg\": 175,\n\t\"./londonHighResFootprint_2020-08-18T12:00:00.svg\": 176,\n\t\"./londonHighResFootprint_2020-08-18T16:00:00.svg\": 177,\n\t\"./londonHighResFootprint_2020-08-18T20:00:00.svg\": 178,\n\t\"./londonHighResFootprint_2020-08-19T00:00:00.svg\": 179,\n\t\"./londonHighResFootprint_2020-08-19T04:00:00.svg\": 180,\n\t\"./londonHighResFootprint_2020-08-19T08:00:00.svg\": 181,\n\t\"./londonHighResFootprint_2020-08-19T12:00:00.svg\": 182,\n\t\"./londonHighResFootprint_2020-08-19T16:00:00.svg\": 183,\n\t\"./londonHighResFootprint_2020-08-19T20:00:00.svg\": 184,\n\t\"./londonHighResFootprint_2020-08-20T00:00:00.svg\": 185,\n\t\"./londonHighResFootprint_2020-08-20T04:00:00.svg\": 186,\n\t\"./londonHighResFootprint_2020-08-20T08:00:00.svg\": 187,\n\t\"./londonHighResFootprint_2020-08-20T12:00:00.svg\": 188,\n\t\"./londonHighResFootprint_2020-08-20T16:00:00.svg\": 189,\n\t\"./londonHighResFootprint_2020-08-20T20:00:00.svg\": 190,\n\t\"./londonHighResFootprint_2020-08-21T00:00:00.svg\": 191,\n\t\"./londonHighResFootprint_2020-08-21T04:00:00.svg\": 192,\n\t\"./londonHighResFootprint_2020-08-21T08:00:00.svg\": 193,\n\t\"./londonHighResFootprint_2020-08-21T12:00:00.svg\": 194,\n\t\"./londonHighResFootprint_2020-08-21T16:00:00.svg\": 195,\n\t\"./londonHighResFootprint_2020-08-21T20:00:00.svg\": 196,\n\t\"./londonHighResFootprint_2020-08-22T00:00:00.svg\": 197,\n\t\"./londonHighResFootprint_2020-08-22T04:00:00.svg\": 198,\n\t\"./londonHighResFootprint_2020-08-22T08:00:00.svg\": 199,\n\t\"./londonHighResFootprint_2020-08-22T12:00:00.svg\": 200,\n\t\"./londonHighResFootprint_2020-08-22T16:00:00.svg\": 201,\n\t\"./londonHighResFootprint_2020-08-22T20:00:00.svg\": 202,\n\t\"./londonHighResFootprint_2020-08-23T00:00:00.svg\": 203,\n\t\"./londonHighResFootprint_2020-08-23T04:00:00.svg\": 204,\n\t\"./londonHighResFootprint_2020-08-23T08:00:00.svg\": 205,\n\t\"./londonHighResFootprint_2020-08-23T12:00:00.svg\": 206,\n\t\"./londonHighResFootprint_2020-08-23T16:00:00.svg\": 207,\n\t\"./londonHighResFootprint_2020-08-23T20:00:00.svg\": 208,\n\t\"./londonHighResFootprint_2020-08-24T00:00:00.svg\": 209,\n\t\"./londonHighResFootprint_2020-08-24T04:00:00.svg\": 210,\n\t\"./londonHighResFootprint_2020-08-24T08:00:00.svg\": 211,\n\t\"./londonHighResFootprint_2020-08-24T12:00:00.svg\": 212,\n\t\"./londonHighResFootprint_2020-08-24T16:00:00.svg\": 213,\n\t\"./londonHighResFootprint_2020-08-24T20:00:00.svg\": 214,\n\t\"./londonHighResFootprint_2020-08-25T00:00:00.svg\": 215,\n\t\"./londonHighResFootprint_2020-08-25T04:00:00.svg\": 216,\n\t\"./londonHighResFootprint_2020-08-25T08:00:00.svg\": 217,\n\t\"./londonHighResFootprint_2020-08-25T12:00:00.svg\": 218,\n\t\"./londonHighResFootprint_2020-08-25T16:00:00.svg\": 219,\n\t\"./londonHighResFootprint_2020-08-25T20:00:00.svg\": 220,\n\t\"./londonHighResFootprint_2020-08-26T00:00:00.svg\": 221,\n\t\"./londonHighResFootprint_2020-08-26T04:00:00.svg\": 222,\n\t\"./londonHighResFootprint_2020-08-26T08:00:00.svg\": 223,\n\t\"./londonHighResFootprint_2020-08-26T12:00:00.svg\": 224,\n\t\"./londonHighResFootprint_2020-08-26T16:00:00.svg\": 225,\n\t\"./londonHighResFootprint_2020-08-26T20:00:00.svg\": 226,\n\t\"./londonHighResFootprint_2020-08-27T00:00:00.svg\": 227,\n\t\"./londonHighResFootprint_2020-08-27T04:00:00.svg\": 228,\n\t\"./londonHighResFootprint_2020-08-27T08:00:00.svg\": 229,\n\t\"./londonHighResFootprint_2020-08-27T12:00:00.svg\": 230,\n\t\"./londonHighResFootprint_2020-08-27T16:00:00.svg\": 231,\n\t\"./londonHighResFootprint_2020-08-27T20:00:00.svg\": 232,\n\t\"./londonHighResFootprint_2020-08-28T00:00:00.svg\": 233,\n\t\"./londonHighResFootprint_2020-08-28T04:00:00.svg\": 234,\n\t\"./londonHighResFootprint_2020-08-28T08:00:00.svg\": 235,\n\t\"./londonHighResFootprint_2020-08-28T12:00:00.svg\": 236,\n\t\"./londonHighResFootprint_2020-08-28T16:00:00.svg\": 237,\n\t\"./londonHighResFootprint_2020-08-28T20:00:00.svg\": 238,\n\t\"./londonHighResFootprint_2020-08-29T00:00:00.svg\": 239,\n\t\"./londonHighResFootprint_2020-08-29T04:00:00.svg\": 240,\n\t\"./londonHighResFootprint_2020-08-29T08:00:00.svg\": 241,\n\t\"./londonHighResFootprint_2020-08-29T12:00:00.svg\": 242,\n\t\"./londonHighResFootprint_2020-08-29T16:00:00.svg\": 243,\n\t\"./londonHighResFootprint_2020-08-29T20:00:00.svg\": 244,\n\t\"./londonHighResFootprint_2020-08-30T00:00:00.svg\": 245,\n\t\"./londonHighResFootprint_2020-08-30T04:00:00.svg\": 246,\n\t\"./londonHighResFootprint_2020-08-30T08:00:00.svg\": 247,\n\t\"./londonHighResFootprint_2020-08-30T12:00:00.svg\": 248,\n\t\"./londonHighResFootprint_2020-08-30T16:00:00.svg\": 249,\n\t\"./londonHighResFootprint_2020-08-30T20:00:00.svg\": 250,\n\t\"./londonHighResFootprint_2020-08-31T00:00:00.svg\": 251,\n\t\"./londonHighResFootprint_2020-08-31T04:00:00.svg\": 252,\n\t\"./londonHighResFootprint_2020-08-31T08:00:00.svg\": 253,\n\t\"./londonHighResFootprint_2020-08-31T12:00:00.svg\": 254,\n\t\"./londonHighResFootprint_2020-08-31T16:00:00.svg\": 255,\n\t\"./londonHighResFootprint_2020-08-31T20:00:00.svg\": 256\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T00:00:00.5f47371d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T04:00:00.0d4d4427.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T08:00:00.97f87e93.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T12:00:00.5a2f0058.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T16:00:00.dec0944b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T20:00:00.2ad5d6fb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T00:00:00.3a2e3c99.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T04:00:00.f1b79432.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T08:00:00.50e329b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T12:00:00.7c65f9e0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T16:00:00.46f35584.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T20:00:00.60029ebe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T00:00:00.569f7a37.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T04:00:00.164537bb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T08:00:00.7a598186.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T12:00:00.0d049c67.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T16:00:00.824b8bae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T20:00:00.b96765a5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T00:00:00.1ab3a471.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T04:00:00.a7afa9c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T08:00:00.5bd68e14.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T12:00:00.7f42486e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T16:00:00.421b340f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T20:00:00.35375917.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T00:00:00.4694b0fe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T04:00:00.ccff12cf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T08:00:00.e98702e4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T12:00:00.526e3ec7.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T16:00:00.de74270b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T20:00:00.a45328ce.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T00:00:00.7b356e6d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T04:00:00.c0c44612.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T08:00:00.5fba3ad8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T12:00:00.9958d106.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T16:00:00.b9f252e0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T20:00:00.009d79f9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T00:00:00.8cbc6a6c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T04:00:00.1be7830d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T08:00:00.5f4fe4c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T12:00:00.8f8efb45.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T16:00:00.8bab536b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T20:00:00.c2735250.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T00:00:00.c7184bbb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T04:00:00.6b3648d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T08:00:00.e3277667.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T12:00:00.20412b86.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T16:00:00.448486ce.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T20:00:00.a9072926.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T00:00:00.fd654ab1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T04:00:00.7d54b6b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T08:00:00.bcf01f07.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T12:00:00.66069a20.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T16:00:00.b9f92bb4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T20:00:00.cd3ae5d5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T00:00:00.5f61650f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T04:00:00.5d0650aa.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T08:00:00.c3b4e14a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T12:00:00.468e9204.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T16:00:00.a5945c10.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T20:00:00.728e5f25.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T00:00:00.1c9b3ab2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T04:00:00.c92c0ba2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T08:00:00.a551c471.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T12:00:00.dadf6493.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T16:00:00.ab90d5f0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T20:00:00.64c4a812.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T00:00:00.80ac850a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T04:00:00.cdd04485.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T08:00:00.50cb48d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T12:00:00.cdae1f25.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T16:00:00.8a0a7810.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T20:00:00.dfcb719d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T00:00:00.91e52e44.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T04:00:00.623d1dc6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T08:00:00.90aded85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T12:00:00.c53aef1b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T16:00:00.71aa3147.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T20:00:00.6adf0225.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T00:00:00.692b80c6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T04:00:00.0ae5bb57.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T08:00:00.e34589aa.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T12:00:00.d029c7a0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T16:00:00.74781c7f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T20:00:00.2fb669c8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T00:00:00.f7025717.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T04:00:00.460f164d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T08:00:00.78ed38ae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T12:00:00.fbd5b6c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T16:00:00.17245811.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T20:00:00.ba732d81.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T00:00:00.493a0eb5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T04:00:00.60dbe4ae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T08:00:00.df2d992a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T12:00:00.2df263b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T16:00:00.d92f9d44.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T20:00:00.82c91515.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T00:00:00.cb5dfaad.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T04:00:00.6bdadda8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T08:00:00.e7899bd6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T12:00:00.530aaf9c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T16:00:00.5851bb8f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T20:00:00.aaabe756.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T00:00:00.6359c261.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T04:00:00.39e5f198.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T08:00:00.e4509d8e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T12:00:00.82369ded.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T16:00:00.21fd28c6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T20:00:00.dfab1edc.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T00:00:00.4f736af5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T04:00:00.b5a8f15a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T08:00:00.41cf91e6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T12:00:00.77b51190.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T16:00:00.b7ac6177.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T20:00:00.a59ba064.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T00:00:00.da1a7144.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T04:00:00.061317b8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T08:00:00.8ed8043f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T12:00:00.4d4e6270.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T16:00:00.db32e9d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T20:00:00.df7787f1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T00:00:00.f26b7696.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T04:00:00.0468a891.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T08:00:00.71a3b0ba.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T12:00:00.e0bb2d85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T16:00:00.6b38752b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T20:00:00.bf93bbd2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T00:00:00.8b30a830.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T04:00:00.3538a7da.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T08:00:00.23eaf792.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T12:00:00.e7cc0fe4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T16:00:00.71deea69.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T20:00:00.48004481.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T00:00:00.5c869dda.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T04:00:00.846221a3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T08:00:00.36fa760e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T12:00:00.fe850104.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T16:00:00.9b867bba.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T20:00:00.dee7b1bf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T00:00:00.cfe6db85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T04:00:00.ad15cf1c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T08:00:00.e41e55a2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T12:00:00.84884816.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T16:00:00.b3f7e9c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T20:00:00.f446167c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T00:00:00.e08aa0b7.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T04:00:00.2f764a63.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T08:00:00.da69b27e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T12:00:00.892de520.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T16:00:00.52e9b276.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T20:00:00.a189f4e6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T00:00:00.8a6375fe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T04:00:00.95fce997.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T08:00:00.f6a3851e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T12:00:00.40eca68e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T16:00:00.bd22aa0c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T20:00:00.4b6e456d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T00:00:00.38f66b66.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T04:00:00.3b400e42.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T08:00:00.f80a1f76.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T12:00:00.6bca609a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T16:00:00.9b5b812c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T20:00:00.da1e2cfc.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T00:00:00.1c209961.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T04:00:00.19376040.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T08:00:00.5f96110b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T12:00:00.928caedb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T16:00:00.b50d4ab6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T20:00:00.59d59890.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T00:00:00.9e6f880f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T04:00:00.1a4970c1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T08:00:00.4a74d2d0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T12:00:00.ac727453.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T16:00:00.e1841e4b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T20:00:00.3cdbd22a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T00:00:00.54571b37.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T04:00:00.d1bf6ecf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T08:00:00.61d52b7c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T12:00:00.f791e61f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T16:00:00.c3ffb4b0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T20:00:00.72dd62e9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T00:00:00.b992f0b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T04:00:00.8af55ec4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T08:00:00.d10b78c1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T12:00:00.3ef61efd.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T16:00:00.3fd5704d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T20:00:00.5e796e77.svg\";","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nimport styles from \"./LineChart.module.css\";\n\nclass LineChart extends React.Component {\n  render() {\n    const data = this.props.data;\n\n    // Data keyed by site\n    let plotData = [];\n    let siteNumber = 0;\n    let maxY = 0;\n    let minY = Infinity;\n\n    for (const [site, siteData] of Object.entries(data)) {\n      const xValues = siteData[\"x_values\"];\n      const yValues = siteData[\"y_values\"];\n\n      const max = Math.max(...yValues);\n      const min = Math.min(...yValues);\n\n      if (max > maxY) {\n        maxY = max;\n      }\n\n      if (min < minY) {\n        minY = min;\n      }\n\n      const name = String(site).toUpperCase();\n\n      const selectedColour = this.props.colours[siteNumber];\n      const colour = selectedColour ? selectedColour : \"black\";\n\n      const trace = {\n        x: xValues,\n        y: yValues,\n        mode: \"lines\",\n        line: {\n          width: 1,\n          color: colour,\n        },\n        name: name,\n      };\n\n      plotData.push(trace);\n      siteNumber++;\n    }\n\n    let dateMarkObject = null;\n    const selectedDate = this.props.selectedDate;\n\n    if (selectedDate) {\n      const date = new Date(parseInt(selectedDate));\n\n      dateMarkObject = {\n        type: \"line\",\n        x0: date,\n        y0: minY,\n        x1: date,\n        y1: maxY,\n        line: {\n          color: \"black\",\n          width: 1,\n        },\n      };\n    }\n\n    const layout = {\n      title: {\n        text: this.props.title ? this.props.title : null,\n        font: {\n          size: 16,\n        },\n        xanchor: \"center\",\n        y: 0.97,\n        yanchor: \"top\",\n      },\n      xaxis: {\n        range: this.props.xRange ? this.props.xRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n      },\n      yaxis: {\n        automargin: true,\n        title: {\n          text: this.props.yLabel,\n          standoff: 1,\n        },\n        range: this.props.yRange ? this.props.yRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n        zeroline: false,\n      },\n      width: this.props.width,\n      height: this.props.height,\n      margin: {\n        l: 60,\n        r: 40,\n        b: 30,\n        t: 20,\n        pad: 5,\n      },\n      shapes: [dateMarkObject],\n    };\n\n    return (\n      <div data-testid={\"linePlot\"} className={styles.container}>\n        <Plot data={plotData} layout={layout} />\n      </div>\n    );\n  }\n}\n\nLineChart.propTypes = {\n  colours: PropTypes.arrayOf(PropTypes.string).isRequired,\n  data: PropTypes.object.isRequired,\n  selectedDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  xRange: PropTypes.string,\n  yLabel: PropTypes.string,\n  yRange: PropTypes.string,\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport \"./Overview.css\";\n\nclass Overview extends React.Component {\n  render() {\n    return (\n      <div className=\"overview\">\n        <div className=\"overview-card\">\n          <b>London</b>\n          <br />\n          Temperature: 13°C\n        </div>\n        <div className=\"overview-card\">\n          <b>Air quality</b>\n          <br />\n          AQI: 55\n        </div>\n        <div className=\"overview-card\">\n          <b>CO2</b>\n          <br />\n          409.8 ppm\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./VisUnit.module.css\";\n\nclass VisUnit extends React.Component {\n  render() {\n    return (\n      <div data-testid={this.props.testid} className={styles.unit}>\n        {this.props.vis}\n      </div>\n    );\n  }\n}\n\nVisUnit.propTypes = {\n  testid: PropTypes.string.isRequired,\n  vis: PropTypes.node.isRequired\n}\n\nexport default VisUnit;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisUnit from \"../VisUnit/VisUnit\";\n\nimport styles from \"./VisLayout.module.css\";\n\nclass VisLayout extends React.Component {\n  render() {\n    let visualisations;\n    if (Array.isArray(this.props.children)) {\n      visualisations = this.props.children.map((child) => {\n        const key = \"vis-unit-\".concat(child.key);\n        return <VisUnit testid={key} key={key} vis={child} />;\n      });\n    } else {\n      const key = \"vis-unit-\".concat(this.props.children.key);\n      visualisations = <VisUnit testid={key} key={key} vis={this.props.children} />;\n    }\n\n    let plotStyle = styles.main;\n    if (this.props.slimPlot) {\n      plotStyle = styles.mainSlim;\n    }\n\n    return (\n      <div className={styles.content}>\n        <div className={plotStyle}>{visualisations}</div>;\n      </div>\n    );\n  }\n}\n\nVisLayout.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n  slimPlot: PropTypes.bool\n}\n\nexport default VisLayout;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./Checkbox.module.css\";\n\nclass Checkbox extends React.Component {\n  render() {\n    return (\n      <div className={styles.main}>\n        <div className={styles.label}>\n            {this.props.label}\n        </div>\n        <div className={styles.box}>\n          <input\n            name={this.props.name}\n            data-testid={this.props.name}\n            site={this.props.site}\n            species={this.props.species}\n            type=\"checkbox\"\n            checked={this.props.checked}\n            onChange={this.props.onChange}\n            style={{ marginLeft: \"0.5vw\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  site: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired\n}\n\nexport default Checkbox;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styles from \"./SelectionBlock.module.css\";\n\nimport Checkbox from \"../Checkbox/Checkbox\";\n\nclass SelectionBlock extends React.Component {\n  render() {\n    // This just has the data for this specific site\n    const siteDataKeys = this.props.siteDataKeys;\n    const siteName = this.props.siteName;\n\n    let checkboxes = [];\n    for (const species of Object.keys(siteDataKeys)) {\n      const label = `${siteName}_${species}`;\n      const speciesName = String(species).toUpperCase();\n      const checkedStatus = siteDataKeys[species];\n\n      const checkbox = (\n        <Checkbox\n          label={speciesName}\n          name={label}\n          site={siteName}\n          species={species}\n          checked={checkedStatus}\n          onChange={this.props.onChange}\n          key={label}\n        />\n      );\n\n      checkboxes.push(checkbox);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>{this.props.siteName}</div>\n        <div className={styles.checkboxes}>{checkboxes}</div>\n      </div>\n    );\n  }\n}\n\nSelectionBlock.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  siteDataKeys: PropTypes.object.isRequired,\n  siteName: PropTypes.string.isRequired,\n};\n\nexport default SelectionBlock;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n// import styles from \"./ControlPanel.module.css\";\nimport { cloneDeep } from \"lodash\";\nimport SelectionBlock from \"../SelectionBlock/SelectionBlock\";\n\nimport styles from \"./DataSelector.module.css\";\n\nclass DataSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { selected: cloneDeep(this.props.dataKeys) };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.callSelector = this.callSelector.bind(this);\n    this.clearSelection = this.clearSelection.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    const site = target.attributes[\"site\"].value;\n    const species = target.attributes[\"species\"].value;\n\n    // Update the state to have the new\n    const oldSelected = cloneDeep(this.state.selected);\n\n    oldSelected[site][species] = value;\n\n    this.setState({ selected: oldSelected });\n  }\n\n  callSelector() {\n    this.props.dataSelector(this.state.selected);\n  }\n\n  clearSelection() {\n    const selected = this.state.selected;\n\n    for (let [key, subdict] of Object.entries(selected)) {\n      for (const subkey of Object.keys(subdict)) {\n        selected[key][subkey] = false;\n      }\n    }\n\n    this.props.dataSelector(selected);\n  }\n\n  render() {\n    let blocks = [];\n    const dataKeys = this.state.selected;\n\n    for (const site of Object.keys(dataKeys)) {\n      const siteName = String(site).toUpperCase();\n      const siteDataKeys = dataKeys[site];\n\n      const block = (\n        <SelectionBlock\n          siteDataKeys={siteDataKeys}\n          siteName={siteName}\n          onChange={this.handleInputChange}\n          key={siteName}\n        ></SelectionBlock>\n      );\n\n      blocks.push(block);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.blocks}>{blocks}</div>\n        <div className={styles.buttons}>\n          <button className={styles.betterButton} onClick={this.callSelector}>\n            Plot\n          </button>\n          <button className={styles.betterButton} onClick={this.clearSelection}>\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nDataSelector.propTypes = {\n  dataKeys: PropTypes.object,\n  dataSelector: PropTypes.func\n}\n\nexport default DataSelector;\n","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport DataSelector from \"../DataSelector/DataSelector\";\nimport styles from \"./ControlPanel.module.css\";\n\nimport GitHubLogo from \"../../images/github.svg\";\n\nclass ControlPanel extends React.Component {\n  plottingInterface() {\n    if (this.props.plotType === \"timeseries\") {\n      return (\n        <div>\n          <div className={styles.mainHeader}>Sites</div>\n          <DataSelector dataKeys={this.props.dataKeys} dataSelector={this.props.dataSelector} />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <div className={styles.headerText}>LondonGHG</div>\n          <div className={styles.headerTag}>A new system for estimating London's emissions</div>\n        </div>\n        <div className={styles.main}>\n          <div className={styles.plotSelector}>\n            Select visualisation type:\n            <div>\n              <form>\n                <select data-testid=\"select-form\" value={this.props.plotType} onChange={this.props.selectPlotType}>\n                  <option data-testid=\"sel-footprint\" value=\"footprint\">\n                    Footprint\n                  </option>\n                  <option data-testid=\"sel-timeseries\" value=\"timeseries\">\n                    Timeseries\n                  </option>\n                </select>\n              </form>\n            </div>\n          </div>\n          {this.plottingInterface()}\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://github.com/openghg/dashboard\" rel=\"noreferrer\" target=\"_blank\">\n            <img src={GitHubLogo} alt=\"GitHub logo\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  dataKeys: PropTypes.object.isRequired,\n  dataSelector: PropTypes.func.isRequired,\n  plotType: PropTypes.string.isRequired,\n  selectPlotType: PropTypes.func.isRequired\n}\n\nexport default ControlPanel;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nclass GraphContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set the initial size of the plot\n    this.state = { width: 1000, height: 250 };\n    this.contRef = React.createRef();\n  }\n\n  updateDimensions() {\n    const node = this.contRef.current;\n    if (node) {\n      const height = node.parentNode.clientHeight;\n      const width = node.parentNode.clientWidth;\n      this.setState({ height: height, width: width });\n    }\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <div ref={this.contRef}>\n        {React.cloneElement(this.props.children, {\n          height: this.state.height,\n          width: this.state.width,\n        })}\n      </div>\n    );\n  }\n}\n\nGraphContainer.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default GraphContainer;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { LayerGroup, MapContainer, ImageOverlay, CircleMarker, TileLayer, Popup } from \"react-leaflet\";\nimport { Slider } from \"@material-ui/core\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./SliderMap.module.css\";\nimport \"./SliderLabel.css\";\n\nclass SliderMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const startDate = parseInt(this.props.dates[0]);\n\n    this.state = { selectedDate: startDate };\n\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.layerRef = React.createRef();\n  }\n\n  handleDateChange(event, timestamp) {\n    this.props.dateSelector(timestamp);\n    this.setState({ selectedDate: timestamp });\n  }\n\n  createMarkerLayer() {\n    const sites = this.props.sites;\n\n    if (!this.props.showSites) {\n      return null;\n    }\n\n    let markers = [];\n    for (const [site, siteData] of Object.entries(sites)) {\n      const siteName = String(site).toUpperCase();\n      const lat = siteData[\"latitude\"];\n      const long = siteData[\"longitude\"];\n      const longName = siteData[\"long_name\"];\n      const locationStr = `${siteName}, ${lat}, ${long}`;\n\n      const measurement = siteData[\"measurements\"][this.props.selectedDate];\n\n      // Should use some correct binning here\n      let colour = \"black\";\n      if (measurement > 0 && measurement < 30) {\n        colour = \"green\";\n      } else if (measurement < 60) {\n        colour = \"orange\";\n      } else if (measurement < 150) {\n        colour = \"red\";\n      }\n\n      // This is usually bad practice but here we want to force new CircleMarkers\n      // to be created on the map\n      const circleKey = nanoid();\n\n      const circle = (\n        <CircleMarker\n          key={circleKey}\n          center={[lat, long]}\n          radius={15}\n          fillOpacity={0.9}\n          fillColor={colour}\n          stroke={false}\n        >\n          <Popup>\n            <div className={styles.marker}>\n              <div className={styles.markerHeader}>{siteName}</div>\n              <div className={styles.markerBody}>\n                Name: {longName}\n                <br />\n                <br />\n                {new Date(this.state.currentDate).toLocaleDateString()}: {measurement}\n              </div>\n              <div className={styles.markerLocation}>Location: {locationStr}</div>\n            </div>\n          </Popup>\n        </CircleMarker>\n      );\n\n      markers.push(circle);\n    }\n\n    return markers;\n  }\n\n  createSlider() {\n    const dates = this.props.dates;\n\n    const startDate = parseInt(dates[0]);\n    const endDate = parseInt(dates[dates.length - 1]);\n\n    // We'll have to ensure that each of the sites has data for every date\n    // just add in NaNs for missing data - this can be done by the serverless fn\n    const nDates = dates.length;\n\n    let marks = [];\n    for (const date of dates) {\n      const dateInt = parseInt(date);\n      let dateString = null;\n      if (nDates < 36) {\n        dateString = new Date(dateInt).toISOString();\n      }\n\n      marks.push({ value: dateInt, label: dateString });\n    }\n\n    const slider = (\n      <Slider\n        defaultValue={0}\n        onChange={this.handleDateChange}\n        aria-labelledby=\"continuous-slider\"\n        marks={marks}\n        step={null}\n        max={endDate}\n        min={startDate}\n      />\n    );\n\n    return slider;\n  }\n\n  render() {\n    const zoom = this.props.zoom ? this.props.zoom : 5;\n    const width = this.props.width ? this.props.width : \"60vw\";\n    const height = this.props.height ? this.props.height : \"40vh\";\n\n    const style = { width: width, height: height };\n\n    let imgOverlay = null;\n    if (this.props.overlayImg && this.props.overlayBounds) {\n      const imgPath = this.props.overlayImg;\n      const bounds = this.props.overlayBounds;\n\n      imgOverlay = <ImageOverlay url={imgPath} bounds={bounds} opacity={0.7} zIndex={10} />;\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.mapBox}>\n          <MapContainer center={this.props.centre} zoom={zoom} scrollWheelZoom={true} style={style}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LayerGroup ref={this.layerRef}>{this.createMarkerLayer()}</LayerGroup>\n            <LayerGroup>{imgOverlay}</LayerGroup>\n          </MapContainer>\n        </div>\n        <div className={styles.sliderSection}>\n          <div className={styles.sliderContainer}>{this.createSlider()}</div>\n          <div className={styles.dateContainer}>Date: {new Date(this.state.selectedDate).toLocaleString()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSliderMap.propTypes = {\n  centre: PropTypes.array,\n  dateSelector: PropTypes.func.isRequired,\n  dates: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  height: PropTypes.string,\n  overlayBounds: PropTypes.array,\n  overlayImg: PropTypes.string,\n  selectedDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  showSites: PropTypes.bool,\n  sites: PropTypes.object,\n  width: PropTypes.string.isRequired,\n  zoom: PropTypes.number.isRequired\n};\n\nexport default SliderMap;\n","import { nanoid } from \"nanoid\";\n\nexport function getVisID() {\n  // Create a unique ID for each visualisation\n  return \"vis-id-\" + nanoid();\n}\n\nexport function isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nexport function importSVGs() {\n  let footprints = {};\n  // TODO - fix having this folderpath hardcoded\n  try {\n    const requiredSVGs = require.context(\"../images/londonFootprints/TMB\", false, /\\.svg$/);\n    const paths = requiredSVGs.keys();\n\n    // This is quite a bit of work but it means we can have human-readable filenames\n    // and pass a list of UNIX timestamps to the SliderMap component\n    for (const path of paths) {\n      // Here we need to read the filename and convert it to a UNIX timestamp\n      const filename = String(path).split(\"_\")[1];\n      const timestampStr = String(filename).split(\".\")[0];\n\n      const timestamp = new Date(timestampStr).getTime();\n\n      footprints[timestamp] = requiredSVGs(path)[\"default\"];\n    }\n  } catch (error) {\n    console.error(\"Could not import images. We expect image filenames of the form siteName-2021-01-01T00:00:00.svg\");\n  }\n\n  return footprints;\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport SliderMap from \"../SliderMap/SliderMap\";\nimport VisLayout from \"../VisLayout/VisLayout\";\nimport GraphContainer from \"../GraphContainer/GraphContainer\";\nimport LineChart from \"./../LineChart/LineChart\";\nimport colours from \"../../data/colours.json\";\n\nimport { isEmpty, importSVGs } from \"../../util/helpers\";\n\nimport styles from \"./FootprintAnalysis.module.css\";\n\nclass FootprintAnalysis extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const footprints = importSVGs();\n\n    let dates = Object.keys(footprints);\n    dates.sort();\n\n    this.state = { selectedDate: dates[0], footprints: footprints, dates: dates };\n    this.dateSelector = this.dateSelector.bind(this);\n  }\n\n  createGraphs() {\n    const measurementData = this.props.measurementData;\n\n    let visualisations = [];\n\n    // For now just fix this to be TMB\n    // const selectedKeys = this.state.selectedKeys;\n    const selectedKeys = { TMB: { CO2: true, CH4: true } };\n\n    let speciesData = {};\n\n    if (selectedKeys) {\n      for (const [site, subObj] of Object.entries(selectedKeys)) {\n        for (const [species, value] of Object.entries(subObj)) {\n          if (value) {\n            // Create a visualisation and add it to the list\n            const data = measurementData[site][species];\n\n            if (!speciesData.hasOwnProperty(species)) {\n              speciesData[species] = {};\n            }\n\n            speciesData[species][site] = data;\n          }\n        }\n      }\n\n      let totalSites = 0;\n\n      const tableau10 = colours[\"tableau10\"];\n\n      if (!isEmpty(speciesData)) {\n        for (const [species, siteData] of Object.entries(speciesData)) {\n          // Create a graph for each species\n          const title = String(species).toUpperCase();\n          const key = title.concat(\"-fp-\", Object.keys(siteData).join(\"-\"));\n          const containerKey = `footprint-plot-${key}`;\n          const nSites = Object.keys(siteData).length;\n          const selectedColours = tableau10.slice(totalSites, totalSites + nSites);\n\n          //   for (let i = 0; i < nSites; i++) {\n          //     tableau10.push(tableau10.shift());\n          //   }\n\n          const vis = (\n            <GraphContainer key={containerKey}>\n              <LineChart\n                data={siteData}\n                colours={selectedColours}\n                title={title}\n                xLabel=\"Date\"\n                yLabel=\"Concentration\"\n                key={key}\n                selectedDate={this.state.selectedDate}\n              />\n            </GraphContainer>\n          );\n\n          visualisations.push(vis);\n\n          totalSites += nSites;\n        }\n      }\n    }\n    return <VisLayout slimPlot={true}>{visualisations}</VisLayout>;\n  }\n\n  dateSelector(date) {\n    // Here date is a ms-based UNIX timestamp\n    this.setState({ selectedDate: parseInt(date) });\n  }\n\n  dataSelector() {\n    // Select the data we want to plot on the linechart based on the date range we have the footprint for.\n  }\n\n  render() {\n    const footprints = this.state.footprints;\n    const footprintImg = footprints[this.state.selectedDate];\n\n    const overlayBounds = [\n      [50.87063, -1.26],\n      [52.0193672, 0.46799811],\n    ];\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.map}>\n          <SliderMap\n            data-testid=\"slider-map\"\n            dateSelector={this.dateSelector}\n            selectedDate={this.state.selectedDate}\n            dates={this.state.dates}\n            sites={this.props.siteData}\n            centre={this.props.centre}\n            zoom={this.props.zoom}\n            width={this.props.width}\n            height={this.props.height}\n            overlayImg={footprintImg}\n            overlayBounds={overlayBounds}\n            showSites={false}\n          />\n        </div>\n        <div className={styles.plots}>{this.createGraphs()}</div>\n      </div>\n    );\n  }\n}\n\nFootprintAnalysis.propTypes = {\n  centre: PropTypes.arrayOf(PropTypes.number).isRequired,\n  height: PropTypes.string,\n  measurementData: PropTypes.object,\n  siteData: PropTypes.object,\n  width: PropTypes.string,\n  zoom: PropTypes.number.isRequired\n}\n\nexport default FootprintAnalysis;\n","import \"./Dashboard.css\";\nimport React from \"react\";\n\nimport londonGHGSites from \"./data/siteMetadata.json\";\n\nimport LineChart from \"./components/LineChart/LineChart\";\n// import Summary from \"./components/Summary/Summary\";\nimport Overview from \"./components/Overview/Overview\";\nimport VisLayout from \"./components/VisLayout/VisLayout\";\nimport ControlPanel from \"./components/ControlPanel/ControlPanel\";\nimport GraphContainer from \"./components/GraphContainer/GraphContainer\";\nimport FootprintAnalysis from \"./components/FootprintAnalysis/FootprintAnalysis\";\n\nimport siteData from \"./mock/LGHGSitesRandomData.json\";\nimport colours from \"./data/colours.json\";\n\nimport { isEmpty, getVisID } from \"./util/helpers\";\n\nimport TMBData from \"./data/TMB_data_LGHG.json\";\nimport NPLData from \"./data/NPL_data_LGHG.json\";\nimport BTTData from \"./data/BTT_data_LGHG.json\";\n\nconst measurementData = {\n  ...TMBData,\n  ...NPLData,\n  ...BTTData,\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      sidePanel: false,\n      //   apiData: [],\n      selectedDate: 0,\n      processedData: {},\n      dataKeys: {},\n      selectedKeys: {},\n      footprintView: true,\n      emptySelection: true,\n      plotType: \"footprint\",\n    };\n\n    // For the moment create some fake sites\n    this.state.sites = londonGHGSites;\n    // This data will come from a function but for now just read it in\n    this.state.apiData = this.processData();\n\n    this.toggleSidePanel = this.toggleSidePanel.bind(this);\n    this.dataSelector = this.dataSelector.bind(this);\n    this.processData = this.processData.bind(this);\n    this.dateSelector = this.dateSelector.bind(this);\n    this.selectPlotType = this.selectPlotType.bind(this);\n  }\n\n  dateSelector(date) {\n    // Here date is a ms-based UNIX timestamp\n    this.setState({ selectedDate: parseInt(date) });\n  }\n\n  // Need a function to process the data that's keyed\n  processData() {\n    // const data = this.state.apiData;\n    const data = measurementData;\n\n    // Process the data and create the correct Javascript time objects\n    let dataKeys = {};\n    let processedData = {};\n\n    try {\n      for (const site of Object.keys(data)) {\n        dataKeys[site] = {};\n        processedData[site] = {};\n\n        for (const species of Object.keys(data[site])) {\n          dataKeys[site][species] = false;\n\n          const gas_data = data[site][species];\n\n          const x_timestamps = Object.keys(gas_data);\n          const x_values = x_timestamps.map((d) => new Date(parseInt(d)));\n          // Extract the count values\n          const y_values = Object.values(gas_data);\n\n          // Create a structure that plotly expects\n          processedData[site][species] = {\n            x_values: x_values,\n            y_values: y_values,\n          };\n        }\n      }\n    } catch (error) {\n      console.error(\"Error reading data: \", error);\n    }\n\n    // Disabled the no direct mutation rule here as this only gets called from the ctor\n    /* eslint-disable react/no-direct-mutation-state */\n    this.state.processedData = processedData;\n    this.state.dataKeys = dataKeys;\n    this.state.selectedKeys = dataKeys;\n    this.state.isLoaded = true;\n    /* eslint-enable react/no-direct-mutation-state */\n  }\n\n  dataSelector(dataKeys) {\n    this.setState({ selectedKeys: dataKeys });\n  }\n\n  createGraphs() {\n    let visualisations = [];\n\n    const selectedKeys = this.state.selectedKeys;\n    const processedData = this.state.processedData;\n\n    let speciesData = {};\n\n    if (selectedKeys) {\n      for (const [site, subObj] of Object.entries(selectedKeys)) {\n        for (const [species, value] of Object.entries(subObj)) {\n          if (value) {\n            // Create a visualisation and add it to the list\n            const data = processedData[site][species];\n\n            if (!speciesData.hasOwnProperty(species)) {\n              speciesData[species] = {};\n            }\n\n            speciesData[species][site] = data;\n          }\n        }\n      }\n\n      let totalSites = 0;\n\n      const tableau10 = colours[\"tableau10\"];\n\n      if (!isEmpty(speciesData)) {\n        for (const [species, siteData] of Object.entries(speciesData)) {\n          // Create a graph for each species\n          const title = String(species).toUpperCase();\n          const key = title.concat(\"-\", Object.keys(siteData).join(\"-\"));\n          const containerKey = `container-${key}`;\n\n          const nSites = Object.keys(siteData).length;\n\n          const selectedColours = tableau10.slice(totalSites, totalSites + nSites);\n\n          //   for (let i = 0; i < nSites; i++) {\n          //     tableau10.push(tableau10.shift());\n          //   }\n\n          const vis = (\n            <GraphContainer key={containerKey}>\n              <LineChart\n                divID={getVisID()}\n                data={siteData}\n                colours={selectedColours}\n                title={title}\n                xLabel=\"Date\"\n                yLabel=\"Concentration\"\n                key={key}\n              />\n            </GraphContainer>\n          );\n\n          visualisations.push(vis);\n\n          totalSites += nSites;\n        }\n      }\n    }\n\n    return visualisations;\n  }\n\n  componentDidMount() {\n    // const apiURL = \"\";\n    // fetch(apiURL)\n    //   .then((res) => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         weatherData: result,\n    //         // or apiData\n    //       });\n    //     },\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error,\n    //       });\n    //     }\n    //   );\n  }\n\n  toggleSidePanel() {\n    this.setState({ sidePanel: !this.state.sidePanel });\n  }\n\n  //   togglePlots() {\n  //     this.setState({ footprintView: !this.state.footprintView });\n  //   }\n\n  selectPlotType(event) {\n    const value = event.target.value;\n    this.setState({ plotType: value });\n  }\n\n  createPlots() {\n    if (this.state.plotType === \"footprint\") {\n      return (\n        <FootprintAnalysis\n          sites={siteData}\n          centre={[51.5, -0.0482]}\n          zoom={9}\n          width={\"75vw\"}\n          height={\"40vh\"}\n          measurementData={this.state.processedData}\n          siteData={siteData}\n        />\n      );\n    } else {\n      return <VisLayout>{this.createGraphs()}</VisLayout>;\n    }\n  }\n\n  anySelected() {\n    for (const subdict of Object.values(this.state.selectedKeys)) {\n      for (const value of Object.values(subdict)) {\n        if (value === true) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  plotHeader() {\n    if (this.state.plotType === \"footprint\") {\n      return <div className={\"plot-header\"}>Footprint Analysis</div>;\n    } else {\n      return <div className={\"plot-header\"}>Timeseries Comparison</div>;\n    }\n  }\n\n  plotAdvice() {\n    if (this.state.plotType === \"timeseries\") {\n      if (!this.state.selectedKeys || !this.anySelected()) {\n        return <div className=\"plot-advice\">Please select species to plot.</div>;\n      }\n    }\n  }\n\n  render() {\n    let { error, isLoaded } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"grid-container\">\n          <div className=\"header\">\n            <div>\n              <div></div>\n            </div>\n            LondonGHG Dashboard\n          </div>\n          <div className=\"main\">\n            <div className=\"main-side\">\n              <ControlPanel\n                selectPlotType={this.selectPlotType}\n                plotType={this.state.plotType}\n                dataKeys={this.state.selectedKeys}\n                dataSelector={this.dataSelector}\n              />\n            </div>\n            <div className=\"main-panel\">\n              <Overview />\n              <div className=\"main-plots\">\n                {this.plotHeader()}\n                {this.createPlots()}\n                {this.plotAdvice()}\n              </div>\n              {/* <Summary>\n                <div>\n                  To tackle climate change, we need to measure and reduce carbon emissions. London GHG is installing a\n                  new network of atmospheric measurements across the capital, and developing a new modelling framework\n                  to provide emission estimates of carbon dioxide and methane.\n                </div>\n              </Summary> */}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}