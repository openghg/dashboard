{"version":3,"sources":["components/SliderMap/SliderMap.module.css","components/ControlPanel/ControlPanel.module.css","components/DataSelector/DataSelector.module.css","components/SelectionBlock/SelectionBlock.module.css","components/FootprintAnalysis/FootprintAnalysis.module.css","components/VisLayout/VisLayout.module.css","components/LineChart/LineChart.module.css","components/VisUnit/VisUnit.module.css","images/londonFootprints/TMB sync nonrecursive //.svg$","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-01T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-02T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-03T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-04T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-05T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-06T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-07T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-08T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-09T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-10T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-11T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-12T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-13T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-14T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-15T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-16T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-17T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-18T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-19T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-20T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-21T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-22T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-23T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-24T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-25T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-26T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-27T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-28T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-29T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-30T20:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T00:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T04:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T08:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T12:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T16:00:00.svg","images/londonFootprints/TMB/londonHighResFootprint_2020-08-31T20:00:00.svg","components/LineChart/LineChart.js","components/Summary/Summary.js","components/Overview/Overview.js","components/VisUnit/VisUnit.js","components/VisLayout/VisLayout.js","components/Checkbox/Checkbox.js","components/SelectionBlock/SelectionBlock.js","components/DataSelector/DataSelector.js","images/github.svg","components/ControlPanel/ControlPanel.js","components/GraphContainer/GraphContainer.js","components/SliderMap/SliderMap.js","util/helpers.js","components/FootprintAnalysis/FootprintAnalysis.js","Dashboard.js","reportWebVitals.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","LineChart","data","this","props","plotData","siteNumber","maxY","minY","Infinity","entries","site","siteData","xValues","yValues","max","Math","min","name","String","toUpperCase","selectedColour","colours","trace","x","y","mode","line","width","color","push","dateMarkObject","selectedDate","date","Date","parseInt","type","x0","y0","x1","y1","layout","title","text","font","size","xanchor","yanchor","xaxis","range","xRange","showgrid","linecolor","autotick","ticks","yaxis","automargin","yLabel","standoff","yRange","zeroline","height","margin","l","r","b","t","pad","shapes","data-testid","className","styles","container","React","Component","Summary","children","Overview","VisUnit","testid","unit","vis","VisLayout","visualisations","Array","isArray","child","key","concat","style","main","slimPlot","mainSlim","Checkbox","label","species","checked","onChange","marginLeft","SelectionBlock","siteDataKeys","siteName","checkboxes","speciesName","checkedStatus","checkbox","header","DataSelector","state","selected","cloneDeep","dataKeys","handleInputChange","bind","callSelector","clearSelection","event","target","value","attributes","oldSelected","setState","dataSelector","subdict","subkey","blocks","block","buttons","betterButton","onClick","ControlPanel","headerText","headerTag","mainHeader","footer","href","rel","src","GitHubLogo","alt","GraphContainer","contRef","createRef","node","current","parentNode","clientHeight","clientWidth","updateDimensions","window","addEventListener","removeEventListener","ref","cloneElement","SliderMap","startDate","dates","handleDateChange","layerRef","timestamp","dateSelector","sites","showSites","markers","lat","long","longName","locationStr","measurement","colour","circleKey","nanoid","circle","CircleMarker","center","radius","fillOpacity","fillColor","stroke","Popup","marker","markerHeader","markerBody","currentDate","toLocaleDateString","markerLocation","endDate","length","nDates","marks","dateInt","dateString","toISOString","Slider","defaultValue","aria-labelledby","step","zoom","imgOverlay","overlayImg","overlayBounds","imgPath","bounds","ImageOverlay","url","opacity","zIndex","mapBox","MapContainer","centre","scrollWheelZoom","TileLayer","attribution","LayerGroup","createMarkerLayer","sliderSection","sliderContainer","createSlider","dateContainer","toLocaleString","getVisID","isEmpty","obj","FootprintAnalysis","footprints","requiredSVGs","require","paths","path","filename","split","timestampStr","getTime","error","console","importSVGs","sort","measurementData","selectedKeys","TMB","CO2","CH4","speciesData","subObj","hasOwnProperty","totalSites","tableau10","join","containerKey","nSites","selectedColours","slice","divID","xLabel","footprintImg","plots","createGraphs","TMBData","NPLData","BTTData","Dashboard","isLoaded","sidePanel","processedData","londonGHGSites","apiData","processData","toggleSidePanel","gas_data","x_values","d","y_values","values","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,0BAA0B,cAAgB,iCAAiC,OAAS,0BAA0B,aAAe,gCAAgC,WAAa,8BAA8B,eAAiB,kCAAkC,gBAAkB,mCAAmC,cAAgB,mC,gBCApYD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,WAAa,iCAAiC,UAAY,gCAAgC,KAAO,2BAA2B,WAAa,iCAAiC,OAAS,+B,oBCAvRD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,QAAU,8BAA8B,aAAe,qC,qdCA3JD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+BAA+B,WAAa,qC,gBCArHD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,IAAM,+BAA+B,MAAQ,mC,iBCAhHD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,8B,iqMCA5DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAS,0BAA0B,SAAS,4B,gBCAvGD,EAAOC,QAAU,CAAC,KAAO,wB,+5hhBCDzB,IAAIC,EAAM,CACT,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,GACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,IACpD,mDAAoD,KAIrD,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,6BC/MpB,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,6BCAzC,OAAe,cAA0B,wE,2M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","file":"static/js/main.5397c7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SliderMap_container__2VjSi\",\"mapBox\":\"SliderMap_mapBox__O_dZn\",\"sliderSection\":\"SliderMap_sliderSection__lH5BT\",\"marker\":\"SliderMap_marker__YdM0E\",\"markerHeader\":\"SliderMap_markerHeader__1LrDT\",\"markerBody\":\"SliderMap_markerBody__3GXWW\",\"markerLocation\":\"SliderMap_markerLocation____0O7\",\"sliderContainer\":\"SliderMap_sliderContainer__2OJrc\",\"dateContainer\":\"SliderMap_dateContainer__1qhlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlPanel_container__Z5LXb\",\"header\":\"ControlPanel_header__1QsP1\",\"headerText\":\"ControlPanel_headerText__1vciO\",\"headerTag\":\"ControlPanel_headerTag__2tt5R\",\"main\":\"ControlPanel_main__28E1L\",\"mainHeader\":\"ControlPanel_mainHeader__61ljS\",\"footer\":\"ControlPanel_footer__18lR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DataSelector_container__1LlIx\",\"blocks\":\"DataSelector_blocks__2Gmnk\",\"buttons\":\"DataSelector_buttons__1wHlV\",\"betterButton\":\"DataSelector_betterButton__3tuu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectionBlock_container__2wOup\",\"header\":\"SelectionBlock_header__xFx_4\",\"checkboxes\":\"SelectionBlock_checkboxes__Ipl0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FootprintAnalysis_container__K0ynd\",\"map\":\"FootprintAnalysis_map__XXCBQ\",\"plots\":\"FootprintAnalysis_plots__ifwSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"VisLayout_main__1T9_C\",\"mainSlim\":\"VisLayout_mainSlim__27hUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LineChart_container__1xvez\",\"x-axis\":\"LineChart_x-axis__1LjG1\",\"y-axis\":\"LineChart_y-axis__18kha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"VisUnit_unit__3bFN-\"};","var map = {\n\t\"./londonHighResFootprint_2020-08-01T00:00:00.svg\": 71,\n\t\"./londonHighResFootprint_2020-08-01T04:00:00.svg\": 72,\n\t\"./londonHighResFootprint_2020-08-01T08:00:00.svg\": 73,\n\t\"./londonHighResFootprint_2020-08-01T12:00:00.svg\": 74,\n\t\"./londonHighResFootprint_2020-08-01T16:00:00.svg\": 75,\n\t\"./londonHighResFootprint_2020-08-01T20:00:00.svg\": 76,\n\t\"./londonHighResFootprint_2020-08-02T00:00:00.svg\": 77,\n\t\"./londonHighResFootprint_2020-08-02T04:00:00.svg\": 78,\n\t\"./londonHighResFootprint_2020-08-02T08:00:00.svg\": 79,\n\t\"./londonHighResFootprint_2020-08-02T12:00:00.svg\": 80,\n\t\"./londonHighResFootprint_2020-08-02T16:00:00.svg\": 81,\n\t\"./londonHighResFootprint_2020-08-02T20:00:00.svg\": 82,\n\t\"./londonHighResFootprint_2020-08-03T00:00:00.svg\": 83,\n\t\"./londonHighResFootprint_2020-08-03T04:00:00.svg\": 84,\n\t\"./londonHighResFootprint_2020-08-03T08:00:00.svg\": 85,\n\t\"./londonHighResFootprint_2020-08-03T12:00:00.svg\": 86,\n\t\"./londonHighResFootprint_2020-08-03T16:00:00.svg\": 87,\n\t\"./londonHighResFootprint_2020-08-03T20:00:00.svg\": 88,\n\t\"./londonHighResFootprint_2020-08-04T00:00:00.svg\": 89,\n\t\"./londonHighResFootprint_2020-08-04T04:00:00.svg\": 90,\n\t\"./londonHighResFootprint_2020-08-04T08:00:00.svg\": 91,\n\t\"./londonHighResFootprint_2020-08-04T12:00:00.svg\": 92,\n\t\"./londonHighResFootprint_2020-08-04T16:00:00.svg\": 93,\n\t\"./londonHighResFootprint_2020-08-04T20:00:00.svg\": 94,\n\t\"./londonHighResFootprint_2020-08-05T00:00:00.svg\": 95,\n\t\"./londonHighResFootprint_2020-08-05T04:00:00.svg\": 96,\n\t\"./londonHighResFootprint_2020-08-05T08:00:00.svg\": 97,\n\t\"./londonHighResFootprint_2020-08-05T12:00:00.svg\": 98,\n\t\"./londonHighResFootprint_2020-08-05T16:00:00.svg\": 99,\n\t\"./londonHighResFootprint_2020-08-05T20:00:00.svg\": 100,\n\t\"./londonHighResFootprint_2020-08-06T00:00:00.svg\": 101,\n\t\"./londonHighResFootprint_2020-08-06T04:00:00.svg\": 102,\n\t\"./londonHighResFootprint_2020-08-06T08:00:00.svg\": 103,\n\t\"./londonHighResFootprint_2020-08-06T12:00:00.svg\": 104,\n\t\"./londonHighResFootprint_2020-08-06T16:00:00.svg\": 105,\n\t\"./londonHighResFootprint_2020-08-06T20:00:00.svg\": 106,\n\t\"./londonHighResFootprint_2020-08-07T00:00:00.svg\": 107,\n\t\"./londonHighResFootprint_2020-08-07T04:00:00.svg\": 108,\n\t\"./londonHighResFootprint_2020-08-07T08:00:00.svg\": 109,\n\t\"./londonHighResFootprint_2020-08-07T12:00:00.svg\": 110,\n\t\"./londonHighResFootprint_2020-08-07T16:00:00.svg\": 111,\n\t\"./londonHighResFootprint_2020-08-07T20:00:00.svg\": 112,\n\t\"./londonHighResFootprint_2020-08-08T00:00:00.svg\": 113,\n\t\"./londonHighResFootprint_2020-08-08T04:00:00.svg\": 114,\n\t\"./londonHighResFootprint_2020-08-08T08:00:00.svg\": 115,\n\t\"./londonHighResFootprint_2020-08-08T12:00:00.svg\": 116,\n\t\"./londonHighResFootprint_2020-08-08T16:00:00.svg\": 117,\n\t\"./londonHighResFootprint_2020-08-08T20:00:00.svg\": 118,\n\t\"./londonHighResFootprint_2020-08-09T00:00:00.svg\": 119,\n\t\"./londonHighResFootprint_2020-08-09T04:00:00.svg\": 120,\n\t\"./londonHighResFootprint_2020-08-09T08:00:00.svg\": 121,\n\t\"./londonHighResFootprint_2020-08-09T12:00:00.svg\": 122,\n\t\"./londonHighResFootprint_2020-08-09T16:00:00.svg\": 123,\n\t\"./londonHighResFootprint_2020-08-09T20:00:00.svg\": 124,\n\t\"./londonHighResFootprint_2020-08-10T00:00:00.svg\": 125,\n\t\"./londonHighResFootprint_2020-08-10T04:00:00.svg\": 126,\n\t\"./londonHighResFootprint_2020-08-10T08:00:00.svg\": 127,\n\t\"./londonHighResFootprint_2020-08-10T12:00:00.svg\": 128,\n\t\"./londonHighResFootprint_2020-08-10T16:00:00.svg\": 129,\n\t\"./londonHighResFootprint_2020-08-10T20:00:00.svg\": 130,\n\t\"./londonHighResFootprint_2020-08-11T00:00:00.svg\": 131,\n\t\"./londonHighResFootprint_2020-08-11T04:00:00.svg\": 132,\n\t\"./londonHighResFootprint_2020-08-11T08:00:00.svg\": 133,\n\t\"./londonHighResFootprint_2020-08-11T12:00:00.svg\": 134,\n\t\"./londonHighResFootprint_2020-08-11T16:00:00.svg\": 135,\n\t\"./londonHighResFootprint_2020-08-11T20:00:00.svg\": 136,\n\t\"./londonHighResFootprint_2020-08-12T00:00:00.svg\": 137,\n\t\"./londonHighResFootprint_2020-08-12T04:00:00.svg\": 138,\n\t\"./londonHighResFootprint_2020-08-12T08:00:00.svg\": 139,\n\t\"./londonHighResFootprint_2020-08-12T12:00:00.svg\": 140,\n\t\"./londonHighResFootprint_2020-08-12T16:00:00.svg\": 141,\n\t\"./londonHighResFootprint_2020-08-12T20:00:00.svg\": 142,\n\t\"./londonHighResFootprint_2020-08-13T00:00:00.svg\": 143,\n\t\"./londonHighResFootprint_2020-08-13T04:00:00.svg\": 144,\n\t\"./londonHighResFootprint_2020-08-13T08:00:00.svg\": 145,\n\t\"./londonHighResFootprint_2020-08-13T12:00:00.svg\": 146,\n\t\"./londonHighResFootprint_2020-08-13T16:00:00.svg\": 147,\n\t\"./londonHighResFootprint_2020-08-13T20:00:00.svg\": 148,\n\t\"./londonHighResFootprint_2020-08-14T00:00:00.svg\": 149,\n\t\"./londonHighResFootprint_2020-08-14T04:00:00.svg\": 150,\n\t\"./londonHighResFootprint_2020-08-14T08:00:00.svg\": 151,\n\t\"./londonHighResFootprint_2020-08-14T12:00:00.svg\": 152,\n\t\"./londonHighResFootprint_2020-08-14T16:00:00.svg\": 153,\n\t\"./londonHighResFootprint_2020-08-14T20:00:00.svg\": 154,\n\t\"./londonHighResFootprint_2020-08-15T00:00:00.svg\": 155,\n\t\"./londonHighResFootprint_2020-08-15T04:00:00.svg\": 156,\n\t\"./londonHighResFootprint_2020-08-15T08:00:00.svg\": 157,\n\t\"./londonHighResFootprint_2020-08-15T12:00:00.svg\": 158,\n\t\"./londonHighResFootprint_2020-08-15T16:00:00.svg\": 159,\n\t\"./londonHighResFootprint_2020-08-15T20:00:00.svg\": 160,\n\t\"./londonHighResFootprint_2020-08-16T00:00:00.svg\": 161,\n\t\"./londonHighResFootprint_2020-08-16T04:00:00.svg\": 162,\n\t\"./londonHighResFootprint_2020-08-16T08:00:00.svg\": 163,\n\t\"./londonHighResFootprint_2020-08-16T12:00:00.svg\": 164,\n\t\"./londonHighResFootprint_2020-08-16T16:00:00.svg\": 165,\n\t\"./londonHighResFootprint_2020-08-16T20:00:00.svg\": 166,\n\t\"./londonHighResFootprint_2020-08-17T00:00:00.svg\": 167,\n\t\"./londonHighResFootprint_2020-08-17T04:00:00.svg\": 168,\n\t\"./londonHighResFootprint_2020-08-17T08:00:00.svg\": 169,\n\t\"./londonHighResFootprint_2020-08-17T12:00:00.svg\": 170,\n\t\"./londonHighResFootprint_2020-08-17T16:00:00.svg\": 171,\n\t\"./londonHighResFootprint_2020-08-17T20:00:00.svg\": 172,\n\t\"./londonHighResFootprint_2020-08-18T00:00:00.svg\": 173,\n\t\"./londonHighResFootprint_2020-08-18T04:00:00.svg\": 174,\n\t\"./londonHighResFootprint_2020-08-18T08:00:00.svg\": 175,\n\t\"./londonHighResFootprint_2020-08-18T12:00:00.svg\": 176,\n\t\"./londonHighResFootprint_2020-08-18T16:00:00.svg\": 177,\n\t\"./londonHighResFootprint_2020-08-18T20:00:00.svg\": 178,\n\t\"./londonHighResFootprint_2020-08-19T00:00:00.svg\": 179,\n\t\"./londonHighResFootprint_2020-08-19T04:00:00.svg\": 180,\n\t\"./londonHighResFootprint_2020-08-19T08:00:00.svg\": 181,\n\t\"./londonHighResFootprint_2020-08-19T12:00:00.svg\": 182,\n\t\"./londonHighResFootprint_2020-08-19T16:00:00.svg\": 183,\n\t\"./londonHighResFootprint_2020-08-19T20:00:00.svg\": 184,\n\t\"./londonHighResFootprint_2020-08-20T00:00:00.svg\": 185,\n\t\"./londonHighResFootprint_2020-08-20T04:00:00.svg\": 186,\n\t\"./londonHighResFootprint_2020-08-20T08:00:00.svg\": 187,\n\t\"./londonHighResFootprint_2020-08-20T12:00:00.svg\": 188,\n\t\"./londonHighResFootprint_2020-08-20T16:00:00.svg\": 189,\n\t\"./londonHighResFootprint_2020-08-20T20:00:00.svg\": 190,\n\t\"./londonHighResFootprint_2020-08-21T00:00:00.svg\": 191,\n\t\"./londonHighResFootprint_2020-08-21T04:00:00.svg\": 192,\n\t\"./londonHighResFootprint_2020-08-21T08:00:00.svg\": 193,\n\t\"./londonHighResFootprint_2020-08-21T12:00:00.svg\": 194,\n\t\"./londonHighResFootprint_2020-08-21T16:00:00.svg\": 195,\n\t\"./londonHighResFootprint_2020-08-21T20:00:00.svg\": 196,\n\t\"./londonHighResFootprint_2020-08-22T00:00:00.svg\": 197,\n\t\"./londonHighResFootprint_2020-08-22T04:00:00.svg\": 198,\n\t\"./londonHighResFootprint_2020-08-22T08:00:00.svg\": 199,\n\t\"./londonHighResFootprint_2020-08-22T12:00:00.svg\": 200,\n\t\"./londonHighResFootprint_2020-08-22T16:00:00.svg\": 201,\n\t\"./londonHighResFootprint_2020-08-22T20:00:00.svg\": 202,\n\t\"./londonHighResFootprint_2020-08-23T00:00:00.svg\": 203,\n\t\"./londonHighResFootprint_2020-08-23T04:00:00.svg\": 204,\n\t\"./londonHighResFootprint_2020-08-23T08:00:00.svg\": 205,\n\t\"./londonHighResFootprint_2020-08-23T12:00:00.svg\": 206,\n\t\"./londonHighResFootprint_2020-08-23T16:00:00.svg\": 207,\n\t\"./londonHighResFootprint_2020-08-23T20:00:00.svg\": 208,\n\t\"./londonHighResFootprint_2020-08-24T00:00:00.svg\": 209,\n\t\"./londonHighResFootprint_2020-08-24T04:00:00.svg\": 210,\n\t\"./londonHighResFootprint_2020-08-24T08:00:00.svg\": 211,\n\t\"./londonHighResFootprint_2020-08-24T12:00:00.svg\": 212,\n\t\"./londonHighResFootprint_2020-08-24T16:00:00.svg\": 213,\n\t\"./londonHighResFootprint_2020-08-24T20:00:00.svg\": 214,\n\t\"./londonHighResFootprint_2020-08-25T00:00:00.svg\": 215,\n\t\"./londonHighResFootprint_2020-08-25T04:00:00.svg\": 216,\n\t\"./londonHighResFootprint_2020-08-25T08:00:00.svg\": 217,\n\t\"./londonHighResFootprint_2020-08-25T12:00:00.svg\": 218,\n\t\"./londonHighResFootprint_2020-08-25T16:00:00.svg\": 219,\n\t\"./londonHighResFootprint_2020-08-25T20:00:00.svg\": 220,\n\t\"./londonHighResFootprint_2020-08-26T00:00:00.svg\": 221,\n\t\"./londonHighResFootprint_2020-08-26T04:00:00.svg\": 222,\n\t\"./londonHighResFootprint_2020-08-26T08:00:00.svg\": 223,\n\t\"./londonHighResFootprint_2020-08-26T12:00:00.svg\": 224,\n\t\"./londonHighResFootprint_2020-08-26T16:00:00.svg\": 225,\n\t\"./londonHighResFootprint_2020-08-26T20:00:00.svg\": 226,\n\t\"./londonHighResFootprint_2020-08-27T00:00:00.svg\": 227,\n\t\"./londonHighResFootprint_2020-08-27T04:00:00.svg\": 228,\n\t\"./londonHighResFootprint_2020-08-27T08:00:00.svg\": 229,\n\t\"./londonHighResFootprint_2020-08-27T12:00:00.svg\": 230,\n\t\"./londonHighResFootprint_2020-08-27T16:00:00.svg\": 231,\n\t\"./londonHighResFootprint_2020-08-27T20:00:00.svg\": 232,\n\t\"./londonHighResFootprint_2020-08-28T00:00:00.svg\": 233,\n\t\"./londonHighResFootprint_2020-08-28T04:00:00.svg\": 234,\n\t\"./londonHighResFootprint_2020-08-28T08:00:00.svg\": 235,\n\t\"./londonHighResFootprint_2020-08-28T12:00:00.svg\": 236,\n\t\"./londonHighResFootprint_2020-08-28T16:00:00.svg\": 237,\n\t\"./londonHighResFootprint_2020-08-28T20:00:00.svg\": 238,\n\t\"./londonHighResFootprint_2020-08-29T00:00:00.svg\": 239,\n\t\"./londonHighResFootprint_2020-08-29T04:00:00.svg\": 240,\n\t\"./londonHighResFootprint_2020-08-29T08:00:00.svg\": 241,\n\t\"./londonHighResFootprint_2020-08-29T12:00:00.svg\": 242,\n\t\"./londonHighResFootprint_2020-08-29T16:00:00.svg\": 243,\n\t\"./londonHighResFootprint_2020-08-29T20:00:00.svg\": 244,\n\t\"./londonHighResFootprint_2020-08-30T00:00:00.svg\": 245,\n\t\"./londonHighResFootprint_2020-08-30T04:00:00.svg\": 246,\n\t\"./londonHighResFootprint_2020-08-30T08:00:00.svg\": 247,\n\t\"./londonHighResFootprint_2020-08-30T12:00:00.svg\": 248,\n\t\"./londonHighResFootprint_2020-08-30T16:00:00.svg\": 249,\n\t\"./londonHighResFootprint_2020-08-30T20:00:00.svg\": 250,\n\t\"./londonHighResFootprint_2020-08-31T00:00:00.svg\": 251,\n\t\"./londonHighResFootprint_2020-08-31T04:00:00.svg\": 252,\n\t\"./londonHighResFootprint_2020-08-31T08:00:00.svg\": 253,\n\t\"./londonHighResFootprint_2020-08-31T12:00:00.svg\": 254,\n\t\"./londonHighResFootprint_2020-08-31T16:00:00.svg\": 255,\n\t\"./londonHighResFootprint_2020-08-31T20:00:00.svg\": 256\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T00:00:00.5f47371d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T04:00:00.0d4d4427.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T08:00:00.97f87e93.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T12:00:00.5a2f0058.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T16:00:00.dec0944b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-01T20:00:00.2ad5d6fb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T00:00:00.3a2e3c99.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T04:00:00.f1b79432.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T08:00:00.50e329b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T12:00:00.7c65f9e0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T16:00:00.46f35584.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-02T20:00:00.60029ebe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T00:00:00.569f7a37.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T04:00:00.164537bb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T08:00:00.7a598186.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T12:00:00.0d049c67.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T16:00:00.824b8bae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-03T20:00:00.b96765a5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T00:00:00.1ab3a471.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T04:00:00.a7afa9c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T08:00:00.5bd68e14.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T12:00:00.7f42486e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T16:00:00.421b340f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-04T20:00:00.35375917.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T00:00:00.4694b0fe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T04:00:00.ccff12cf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T08:00:00.e98702e4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T12:00:00.526e3ec7.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T16:00:00.de74270b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-05T20:00:00.a45328ce.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T00:00:00.7b356e6d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T04:00:00.c0c44612.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T08:00:00.5fba3ad8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T12:00:00.9958d106.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T16:00:00.b9f252e0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-06T20:00:00.009d79f9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T00:00:00.8cbc6a6c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T04:00:00.1be7830d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T08:00:00.5f4fe4c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T12:00:00.8f8efb45.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T16:00:00.8bab536b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-07T20:00:00.c2735250.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T00:00:00.c7184bbb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T04:00:00.6b3648d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T08:00:00.e3277667.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T12:00:00.20412b86.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T16:00:00.448486ce.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-08T20:00:00.a9072926.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T00:00:00.fd654ab1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T04:00:00.7d54b6b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T08:00:00.bcf01f07.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T12:00:00.66069a20.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T16:00:00.b9f92bb4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-09T20:00:00.cd3ae5d5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T00:00:00.5f61650f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T04:00:00.5d0650aa.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T08:00:00.c3b4e14a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T12:00:00.468e9204.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T16:00:00.a5945c10.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-10T20:00:00.728e5f25.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T00:00:00.1c9b3ab2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T04:00:00.c92c0ba2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T08:00:00.a551c471.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T12:00:00.dadf6493.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T16:00:00.ab90d5f0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-11T20:00:00.64c4a812.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T00:00:00.80ac850a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T04:00:00.cdd04485.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T08:00:00.50cb48d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T12:00:00.cdae1f25.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T16:00:00.8a0a7810.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-12T20:00:00.dfcb719d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T00:00:00.91e52e44.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T04:00:00.623d1dc6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T08:00:00.90aded85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T12:00:00.c53aef1b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T16:00:00.71aa3147.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-13T20:00:00.6adf0225.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T00:00:00.692b80c6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T04:00:00.0ae5bb57.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T08:00:00.e34589aa.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T12:00:00.d029c7a0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T16:00:00.74781c7f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-14T20:00:00.2fb669c8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T00:00:00.f7025717.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T04:00:00.460f164d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T08:00:00.78ed38ae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T12:00:00.fbd5b6c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T16:00:00.17245811.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-15T20:00:00.ba732d81.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T00:00:00.493a0eb5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T04:00:00.60dbe4ae.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T08:00:00.df2d992a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T12:00:00.2df263b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T16:00:00.d92f9d44.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-16T20:00:00.82c91515.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T00:00:00.cb5dfaad.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T04:00:00.6bdadda8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T08:00:00.e7899bd6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T12:00:00.530aaf9c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T16:00:00.5851bb8f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-17T20:00:00.aaabe756.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T00:00:00.6359c261.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T04:00:00.39e5f198.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T08:00:00.e4509d8e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T12:00:00.82369ded.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T16:00:00.21fd28c6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-18T20:00:00.dfab1edc.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T00:00:00.4f736af5.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T04:00:00.b5a8f15a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T08:00:00.41cf91e6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T12:00:00.77b51190.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T16:00:00.b7ac6177.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-19T20:00:00.a59ba064.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T00:00:00.da1a7144.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T04:00:00.061317b8.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T08:00:00.8ed8043f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T12:00:00.4d4e6270.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T16:00:00.db32e9d9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-20T20:00:00.df7787f1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T00:00:00.f26b7696.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T04:00:00.0468a891.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T08:00:00.71a3b0ba.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T12:00:00.e0bb2d85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T16:00:00.6b38752b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-21T20:00:00.bf93bbd2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T00:00:00.8b30a830.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T04:00:00.3538a7da.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T08:00:00.23eaf792.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T12:00:00.e7cc0fe4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T16:00:00.71deea69.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-22T20:00:00.48004481.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T00:00:00.5c869dda.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T04:00:00.846221a3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T08:00:00.36fa760e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T12:00:00.fe850104.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T16:00:00.9b867bba.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-23T20:00:00.dee7b1bf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T00:00:00.cfe6db85.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T04:00:00.ad15cf1c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T08:00:00.e41e55a2.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T12:00:00.84884816.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T16:00:00.b3f7e9c3.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-24T20:00:00.f446167c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T00:00:00.e08aa0b7.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T04:00:00.2f764a63.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T08:00:00.da69b27e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T12:00:00.892de520.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T16:00:00.52e9b276.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-25T20:00:00.a189f4e6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T00:00:00.8a6375fe.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T04:00:00.95fce997.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T08:00:00.f6a3851e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T12:00:00.40eca68e.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T16:00:00.bd22aa0c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-26T20:00:00.4b6e456d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T00:00:00.38f66b66.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T04:00:00.3b400e42.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T08:00:00.f80a1f76.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T12:00:00.6bca609a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T16:00:00.9b5b812c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-27T20:00:00.da1e2cfc.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T00:00:00.1c209961.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T04:00:00.19376040.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T08:00:00.5f96110b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T12:00:00.928caedb.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T16:00:00.b50d4ab6.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-28T20:00:00.59d59890.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T00:00:00.9e6f880f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T04:00:00.1a4970c1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T08:00:00.4a74d2d0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T12:00:00.ac727453.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T16:00:00.e1841e4b.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-29T20:00:00.3cdbd22a.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T00:00:00.54571b37.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T04:00:00.d1bf6ecf.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T08:00:00.61d52b7c.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T12:00:00.f791e61f.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T16:00:00.c3ffb4b0.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-30T20:00:00.72dd62e9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T00:00:00.b992f0b9.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T04:00:00.8af55ec4.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T08:00:00.d10b78c1.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T12:00:00.3ef61efd.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T16:00:00.3fd5704d.svg\";","export default __webpack_public_path__ + \"static/media/londonHighResFootprint_2020-08-31T20:00:00.5e796e77.svg\";","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nimport styles from \"./LineChart.module.css\";\n\nclass LineChart extends React.Component {\n  render() {\n    const data = this.props.data;\n\n    // Data keyed by site\n    let plotData = [];\n    let siteNumber = 0;\n    let maxY = 0;\n    let minY = Infinity;\n\n    for (const [site, siteData] of Object.entries(data)) {\n      const xValues = siteData[\"x_values\"];\n      const yValues = siteData[\"y_values\"];\n\n      const max = Math.max(...yValues);\n      const min = Math.min(...yValues);\n\n      if (max > maxY) {\n        maxY = max;\n      }\n\n      if (min < minY) {\n        minY = min;\n      }\n\n      const name = String(site).toUpperCase();\n\n      const selectedColour = this.props.colours[siteNumber];\n      const colour = selectedColour ? selectedColour : \"black\";\n\n      const trace = {\n        x: xValues,\n        y: yValues,\n        mode: \"lines\",\n        line: {\n          width: 1,\n          color: colour,\n        },\n        name: name,\n      };\n\n      plotData.push(trace);\n      siteNumber++;\n    }\n\n    let dateMarkObject = null;\n    const selectedDate = this.props.selectedDate;\n\n    if (selectedDate) {\n      const date = new Date(parseInt(selectedDate));\n\n      dateMarkObject = {\n        type: \"line\",\n        x0: date,\n        y0: minY,\n        x1: date,\n        y1: maxY,\n        line: {\n          color: \"black\",\n          width: 1,\n        },\n      };\n    }\n\n    const layout = {\n      title: {\n        text: this.props.title ? this.props.title : null,\n        font: {\n          size: 16,\n        },\n        xanchor: \"center\",\n        y: 0.97,\n        yanchor: \"top\",\n      },\n      xaxis: {\n        range: this.props.xRange ? this.props.xRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n      },\n      yaxis: {\n        automargin: true,\n        title: {\n          text: this.props.yLabel,\n          standoff: 1,\n        },\n        range: this.props.yRange ? this.props.yRange : null,\n        showgrid: false,\n        linecolor: \"black\",\n        autotick: true,\n        ticks: \"outside\",\n        zeroline: false,\n      },\n      width: this.props.width,\n      height: this.props.height,\n      margin: {\n        l: 60,\n        r: 40,\n        b: 30,\n        t: 20,\n        pad: 5,\n      },\n      shapes: [dateMarkObject],\n    };\n\n    return (\n      <div data-testid={\"linePlot\"} className={styles.container}>\n        <Plot data={plotData} layout={layout} />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport \"./Summary.css\";\n\nclass Summary extends React.Component {\n  render() {\n    return <div className=\"summary\">{this.props.children}</div>;\n  }\n}\n\nexport default Summary;\n","import React from \"react\";\nimport \"./Overview.css\";\n\nclass Overview extends React.Component {\n  render() {\n    return (\n      <div className=\"overview\">\n        <div className=\"overview-card\">\n          <b>London</b>\n          <br />\n          Temperature: 13°C\n        </div>\n        <div className=\"overview-card\">\n          <b>Air quality</b>\n          <br />\n          AQI: 55\n        </div>\n        <div className=\"overview-card\">\n          <b>CO2</b>\n          <br />\n          409.8 ppm\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import React from \"react\";\nimport styles from \"./VisUnit.module.css\";\n\nclass VisUnit extends React.Component {\n  render() {\n    return (\n      <div data-testid={this.props.testid} className={styles.unit}>\n        {this.props.vis}\n      </div>\n    );\n  }\n}\n\nexport default VisUnit;\n","import React from \"react\";\nimport VisUnit from \"../VisUnit/VisUnit\";\n\nimport styles from \"./VisLayout.module.css\";\n\nclass VisLayout extends React.Component {\n  render() {\n    let visualisations;\n    if (Array.isArray(this.props.children)) {\n      visualisations = this.props.children.map((child) => {\n        const key = \"vis-unit-\".concat(child.key);\n        return <VisUnit testid={key} key={key} vis={child} />;\n      });\n    } else {\n      const key = \"vis-unit-\".concat(this.props.children.key);\n      visualisations = <VisUnit testid={key} key={key} vis={this.props.children} />;\n    }\n\n    let style = styles.main;\n    if (this.props.slimPlot) {\n      style = styles.mainSlim;\n    }\n\n    return <div className={style}>{visualisations}</div>;\n  }\n}\n\nexport default VisLayout;\n","import React from \"react\";\n// import \"./Checkbox.css\";\n\nclass Checkbox extends React.Component {\n  render() {\n    return (\n      <label>\n        <span>{this.props.label}</span>\n        <input\n          name={this.props.name}\n          data-testid={this.props.name}\n          site={this.props.site}\n          species={this.props.species}\n          type=\"checkbox\"\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n          style={{ marginLeft: \"0.5vw\" }}\n        />\n      </label>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from \"react\";\nimport styles from \"./SelectionBlock.module.css\";\n\nimport Checkbox from \"../Checkbox/Checkbox\";\n\nclass SelectionBlock extends React.Component {\n  render() {\n    // This just has the data for this specific site\n    const siteDataKeys = this.props.siteDataKeys;\n    const siteName = this.props.siteName;\n\n    let checkboxes = [];\n    for (const species of Object.keys(siteDataKeys)) {\n      const label = `${siteName}_${species}`;\n      const speciesName = String(species).toUpperCase();\n      const checkedStatus = siteDataKeys[species];\n\n      const checkbox = (\n        <Checkbox\n          label={speciesName}\n          name={label}\n          site={siteName}\n          species={species}\n          checked={checkedStatus}\n          onChange={this.props.onChange}\n          key={label}\n        />\n      );\n\n      checkboxes.push(checkbox);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>{this.props.siteName}</div>\n        <div className={styles.checkboxes}>{checkboxes}</div>\n      </div>\n    );\n  }\n}\n\nexport default SelectionBlock;\n","import React from \"react\";\n// import styles from \"./ControlPanel.module.css\";\nimport { cloneDeep } from \"lodash\";\nimport SelectionBlock from \"../SelectionBlock/SelectionBlock\";\n\nimport styles from \"./DataSelector.module.css\";\n\nclass DataSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { selected: cloneDeep(this.props.dataKeys) };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.callSelector = this.callSelector.bind(this);\n    this.clearSelection = this.clearSelection.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    const site = target.attributes[\"site\"].value;\n    const species = target.attributes[\"species\"].value;\n\n    // Update the state to have the new\n    const oldSelected = cloneDeep(this.state.selected);\n\n    oldSelected[site][species] = value;\n\n    this.setState({ selected: oldSelected });\n  }\n\n  callSelector() {\n    this.props.dataSelector(this.state.selected);\n  }\n\n  clearSelection() {\n    // Clear all\n    const selected = this.state.selected;\n\n    for (let [key, subdict] of Object.entries(selected)) {\n      for (const subkey of Object.keys(subdict)) {\n        selected[key][subkey] = false;\n      }\n    }\n\n    this.props.dataSelector(selected);\n\n    // Also need to clear all checkboxes\n  }\n\n  render() {\n    let blocks = [];\n    const dataKeys = this.state.selected;\n\n    for (const site of Object.keys(dataKeys)) {\n      const siteName = String(site).toUpperCase();\n      const siteDataKeys = dataKeys[site];\n\n      const block = (\n        <SelectionBlock\n          siteDataKeys={siteDataKeys}\n          siteName={siteName}\n          onChange={this.handleInputChange}\n          key={siteName}\n        ></SelectionBlock>\n      );\n\n      blocks.push(block);\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.blocks}>{blocks}</div>\n        <div className={styles.buttons}>\n          <button className={styles.betterButton} onClick={this.callSelector}>\n            Plot\n          </button>\n          <button className={styles.betterButton} onClick={this.clearSelection}>\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataSelector;\n","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","import React from \"react\";\n\nimport DataSelector from \"../DataSelector/DataSelector\";\nimport styles from \"./ControlPanel.module.css\";\n\nimport GitHubLogo from \"../../images/github.svg\";\n\nclass ControlPanel extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <div className={styles.headerText}>LondonGHG</div>\n          <div className={styles.headerTag}>\n            A new system for estimating London's emissions\n          </div>\n        </div>\n        <div className={styles.main}>\n          <div className={styles.mainHeader}>Sites</div>\n          <DataSelector\n            dataKeys={this.props.dataKeys}\n            dataSelector={this.props.dataSelector}\n          />\n        </div>\n        <div className={styles.footer}>\n          <a\n            href=\"https://github.com/openghg/dashboard\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            <img src={GitHubLogo} alt=\"GitHub logo\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React from \"react\";\n\nclass GraphContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set the initial size of the plot\n    this.state = { width: 1000, height: 250 };\n    this.contRef = React.createRef();\n  }\n\n  updateDimensions() {\n    const node = this.contRef.current;\n    if (node) {\n      const height = node.parentNode.clientHeight;\n      const width = node.parentNode.clientWidth;\n      this.setState({ height: height, width: width });\n    }\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <div ref={this.contRef}>\n        {React.cloneElement(this.props.children, {\n          height: this.state.height,\n          width: this.state.width,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default GraphContainer;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { LayerGroup, MapContainer, ImageOverlay, CircleMarker, TileLayer, Popup } from \"react-leaflet\";\nimport { Slider } from \"@material-ui/core\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./SliderMap.module.css\";\nimport \"./SliderLabel.css\";\n\nclass SliderMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const startDate = parseInt(this.props.dates[0]);\n\n    this.state = { selectedDate: startDate };\n\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.layerRef = React.createRef();\n  }\n\n  handleDateChange(event, timestamp) {\n    this.props.dateSelector(timestamp);\n    this.setState({ selectedDate: timestamp });\n  }\n\n  createMarkerLayer() {\n    const sites = this.props.sites;\n\n    if (!this.props.showSites) {\n      return null;\n    }\n\n    let markers = [];\n    for (const [site, siteData] of Object.entries(sites)) {\n      const siteName = String(site).toUpperCase();\n      const lat = siteData[\"latitude\"];\n      const long = siteData[\"longitude\"];\n      const longName = siteData[\"long_name\"];\n      const locationStr = `${siteName}, ${lat}, ${long}`;\n\n      const measurement = siteData[\"measurements\"][this.props.selectedDate];\n\n      // Should use some correct binning here\n      let colour = \"black\";\n      if (measurement > 0 && measurement < 30) {\n        colour = \"green\";\n      } else if (measurement < 60) {\n        colour = \"orange\";\n      } else if (measurement < 150) {\n        colour = \"red\";\n      }\n\n      // This is usually bad practice but here we want to force new CircleMarkers\n      // to be created on the map\n      const circleKey = nanoid();\n\n      const circle = (\n        <CircleMarker\n          key={circleKey}\n          center={[lat, long]}\n          radius={15}\n          fillOpacity={0.9}\n          fillColor={colour}\n          stroke={false}\n        >\n          <Popup>\n            <div className={styles.marker}>\n              <div className={styles.markerHeader}>{siteName}</div>\n              <div className={styles.markerBody}>\n                Name: {longName}\n                <br />\n                <br />\n                {new Date(this.state.currentDate).toLocaleDateString()}: {measurement}\n              </div>\n              <div className={styles.markerLocation}>Location: {locationStr}</div>\n            </div>\n          </Popup>\n        </CircleMarker>\n      );\n\n      markers.push(circle);\n    }\n\n    return markers;\n  }\n\n  createSlider() {\n    const dates = this.props.dates;\n\n    const startDate = parseInt(dates[0]);\n    const endDate = parseInt(dates[dates.length - 1]);\n\n    // We'll have to ensure that each of the sites has data for every date\n    // just add in NaNs for missing data - this can be done by the serverless fn\n    const nDates = dates.length;\n\n    let marks = [];\n    for (const date of dates) {\n      const dateInt = parseInt(date);\n      let dateString = null;\n      if (nDates < 36) {\n        dateString = new Date(dateInt).toISOString();\n      }\n\n      marks.push({ value: dateInt, label: dateString });\n    }\n\n    const slider = (\n      <Slider\n        defaultValue={0}\n        onChange={this.handleDateChange}\n        aria-labelledby=\"continuous-slider\"\n        marks={marks}\n        step={null}\n        max={endDate}\n        min={startDate}\n      />\n    );\n\n    return slider;\n  }\n\n  render() {\n    const zoom = this.props.zoom ? this.props.zoom : 5;\n    const width = this.props.width ? this.props.width : \"60vw\";\n    const height = this.props.height ? this.props.height : \"40vh\";\n\n    const style = { width: width, height: height };\n\n    let imgOverlay = null;\n    if (this.props.overlayImg && this.props.overlayBounds) {\n      const imgPath = this.props.overlayImg;\n      const bounds = this.props.overlayBounds;\n\n      imgOverlay = <ImageOverlay url={imgPath} bounds={bounds} opacity={0.7} zIndex={10} />;\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.mapBox}>\n          <MapContainer center={this.props.centre} zoom={zoom} scrollWheelZoom={true} style={style}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LayerGroup ref={this.layerRef}>{this.createMarkerLayer()}</LayerGroup>\n            <LayerGroup>{imgOverlay}</LayerGroup>\n          </MapContainer>\n        </div>\n        <div className={styles.sliderSection}>\n          <div className={styles.sliderContainer}>{this.createSlider()}</div>\n          <div className={styles.dateContainer}>Date: {new Date(this.state.selectedDate).toLocaleString()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSliderMap.propTypes = {\n  centre: PropTypes.array,\n  dateSelector: PropTypes.func,\n  height: PropTypes.string,\n  sites: PropTypes.object,\n  width: PropTypes.string,\n  zoom: PropTypes.number,\n};\n\nexport default SliderMap;\n","import { nanoid } from \"nanoid\";\n\nexport function getVisID() {\n  // Create a unique ID for each visualisation\n  return \"vis-id-\" + nanoid();\n}\n\nexport function isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nexport function importSVGs() {\n  let footprints = {};\n  // TODO - fix having this folderpath hardcoded\n  try {\n    const requiredSVGs = require.context(\"../images/londonFootprints/TMB\", false, /\\.svg$/);\n    const paths = requiredSVGs.keys();\n\n    // This is quite a bit of work but it means we can have human-readable filenames\n    // and pass a list of UNIX timestamps to the SliderMap component\n    for (const path of paths) {\n      // Here we need to read the filename and convert it to a UNIX timestamp\n      const filename = String(path).split(\"_\")[1];\n      const timestampStr = String(filename).split(\".\")[0];\n\n      const timestamp = new Date(timestampStr).getTime();\n\n      footprints[timestamp] = requiredSVGs(path)[\"default\"];\n    }\n  } catch (error) {\n    console.error(\"Could not import images. We expect image filenames of the form siteName-2021-01-01T00:00:00.svg\");\n  }\n\n  return footprints;\n}\n","import React from \"react\";\n\nimport SliderMap from \"../SliderMap/SliderMap\";\nimport VisLayout from \"../VisLayout/VisLayout\";\nimport GraphContainer from \"../GraphContainer/GraphContainer\";\nimport LineChart from \"./../LineChart/LineChart\";\nimport colours from \"../../data/colours.json\";\n\nimport { isEmpty, getVisID, importSVGs } from \"../../util/helpers\";\n\nimport styles from \"./FootprintAnalysis.module.css\";\n\n// Import all the data we need - so all the SVGs\n// Have all the site data available\n// Have a list of the sites available\n// Then we can select the plots we want to create\n// Maybe instead of Linechart directly we could use VisLayout\n\nclass FootprintAnalysis extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const footprints = importSVGs();\n\n    let dates = Object.keys(footprints);\n    dates.sort();\n\n    this.state = { selectedDate: dates[0], footprints: footprints, dates: dates };\n    this.dateSelector = this.dateSelector.bind(this);\n  }\n\n  createGraphs() {\n    const measurementData = this.props.measurementData;\n\n    let visualisations = [];\n\n    // For now just fix this to be TMB\n    // const selectedKeys = this.state.selectedKeys;\n    const selectedKeys = { TMB: { CO2: true, CH4: true } };\n\n    let speciesData = {};\n\n    if (selectedKeys) {\n      for (const [site, subObj] of Object.entries(selectedKeys)) {\n        for (const [species, value] of Object.entries(subObj)) {\n          if (value) {\n            // Create a visualisation and add it to the list\n            const data = measurementData[site][species];\n\n            if (!speciesData.hasOwnProperty(species)) {\n              speciesData[species] = {};\n            }\n\n            speciesData[species][site] = data;\n          }\n        }\n      }\n\n      let totalSites = 0;\n\n      const tableau10 = colours[\"tableau10\"];\n\n      if (!isEmpty(speciesData)) {\n        for (const [species, siteData] of Object.entries(speciesData)) {\n          // Create a graph for each species\n          const title = String(species).toUpperCase();\n          const key = title.concat(\"-fp-\", Object.keys(siteData).join(\"-\"));\n          const containerKey = `footprint-plot-${key}`;\n          const nSites = Object.keys(siteData).length;\n          const selectedColours = tableau10.slice(totalSites, totalSites + nSites);\n\n          //   for (let i = 0; i < nSites; i++) {\n          //     tableau10.push(tableau10.shift());\n          //   }\n\n          const vis = (\n            <GraphContainer key={containerKey}>\n              <LineChart\n                divID={getVisID()}\n                data={siteData}\n                colours={selectedColours}\n                title={title}\n                xLabel=\"Date\"\n                yLabel=\"Concentration\"\n                key={key}\n                selectedDate={this.state.selectedDate}\n              />\n            </GraphContainer>\n          );\n\n          visualisations.push(vis);\n\n          totalSites += nSites;\n        }\n      }\n    }\n    return <VisLayout slimPlot={true}>{visualisations}</VisLayout>;\n  }\n\n  dateSelector(date) {\n    // Here date is a ms-based UNIX timestamp\n    this.setState({ selectedDate: parseInt(date) });\n  }\n\n  dataSelector() {\n    // Select the data we want to plot on the linechart based on the date range we have the footprint for.\n  }\n\n  render() {\n    const footprints = this.state.footprints;\n    const footprintImg = footprints[this.state.selectedDate];\n\n    const overlayBounds = [\n      [50.87063, -1.26],\n      [52.0193672, 0.46799811],\n    ];\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.map}>\n          <SliderMap\n            dateSelector={this.dateSelector}\n            selectedDate={this.state.selectedDate}\n            dates={this.state.dates}\n            sites={this.props.siteData}\n            centre={this.props.centre}\n            zoom={this.props.zoom}\n            width={this.props.width}\n            height={this.props.height}\n            overlayImg={footprintImg}\n            overlayBounds={overlayBounds}\n            showSites={false}\n          />\n        </div>\n        <div className={styles.plots}>{this.createGraphs()}</div>\n      </div>\n    );\n  }\n}\n\nexport default FootprintAnalysis;\n","import \"./Dashboard.css\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport londonGHGSites from \"./data/siteMetadata.json\";\n\nimport LineChart from \"./components/LineChart/LineChart\";\nimport Summary from \"./components/Summary/Summary\";\nimport Overview from \"./components/Overview/Overview\";\nimport VisLayout from \"./components/VisLayout/VisLayout\";\nimport ControlPanel from \"./components/ControlPanel/ControlPanel\";\nimport GraphContainer from \"./components/GraphContainer/GraphContainer\";\n// import SliderMap from \"./components/SliderMap/SliderMap\";\nimport FootprintAnalysis from \"./components/FootprintAnalysis/FootprintAnalysis\";\n\nimport siteData from \"./mock/LGHGSitesRandomData.json\";\nimport colours from \"./data/colours.json\";\n\nimport {isEmpty, getVisID} from \"./util/helpers\"\n\nimport TMBData from \"./data/TMB_data_LGHG.json\";\nimport NPLData from \"./data/NPL_data_LGHG.json\";\nimport BTTData from \"./data/BTT_data_LGHG.json\";\n\nconst measurementData = {\n  ...TMBData,\n  ...NPLData,\n  ...BTTData,\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      sidePanel: false,\n      //   apiData: [],\n      selectedDate: 0,\n      processedData: {},\n      dataKeys: {},\n    };\n\n    // For the moment create some fake sites\n    this.state.sites = londonGHGSites;\n    // This data will come from a function but for now just read it in\n    this.state.apiData = this.processData();\n\n    this.toggleSidePanel = this.toggleSidePanel.bind(this);\n    this.dataSelector = this.dataSelector.bind(this);\n    this.processData = this.processData.bind(this);\n    this.dateSelector = this.dateSelector.bind(this);\n  }\n\n  dateSelector(date) {\n    // Here date is a ms-based UNIX timestamp\n    this.setState({ selectedDate: parseInt(date) });\n  }\n\n  // Need a function to process the data that's keyed\n  processData() {\n    // const data = this.state.apiData;\n    const data = measurementData;\n\n    // Process the data and create the correct Javascript time objects\n    let dataKeys = {};\n    let processedData = {};\n\n    try {\n      for (const site of Object.keys(data)) {\n        dataKeys[site] = {};\n        processedData[site] = {};\n\n        for (const species of Object.keys(data[site])) {\n          dataKeys[site][species] = false;\n\n          const gas_data = data[site][species];\n\n          const x_timestamps = Object.keys(gas_data);\n          const x_values = x_timestamps.map((d) => new Date(parseInt(d)));\n          // Extract the count values\n          const y_values = Object.values(gas_data);\n\n          // Create a structure that plotly expects\n          processedData[site][species] = {\n            x_values: x_values,\n            y_values: y_values,\n          };\n        }\n      }\n    } catch (error) {\n      console.error(\"Error reading data: \", error);\n    }\n\n    // Disabled the no direct mutation rule here as this only gets called from the ctor\n    /* eslint-disable react/no-direct-mutation-state */\n    this.state.processedData = processedData;\n    this.state.dataKeys = dataKeys;\n    this.state.isLoaded = true;\n    /* eslint-enable react/no-direct-mutation-state */\n  }\n\n  dataSelector(dataKeys) {\n    this.setState({ selectedKeys: dataKeys });\n  }\n\n  createGraphs() {\n    let visualisations = [];\n\n    const selectedKeys = this.state.selectedKeys;\n    const processedData = this.state.processedData;\n\n    let speciesData = {};\n\n    if (selectedKeys) {\n      for (const [site, subObj] of Object.entries(selectedKeys)) {\n        for (const [species, value] of Object.entries(subObj)) {\n          if (value) {\n            // Create a visualisation and add it to the list\n            const data = processedData[site][species];\n\n            if (!speciesData.hasOwnProperty(species)) {\n              speciesData[species] = {};\n            }\n\n            speciesData[species][site] = data;\n          }\n        }\n      }\n\n      let totalSites = 0;\n\n      const tableau10 = colours[\"tableau10\"];\n\n      if (!isEmpty(speciesData)) {\n        for (const [species, siteData] of Object.entries(speciesData)) {\n          // Create a graph for each species\n          const title = String(species).toUpperCase();\n          const key = title.concat(\"-\", Object.keys(siteData).join(\"-\"));\n          const containerKey = `container-${key}`;\n\n          const nSites = Object.keys(siteData).length;\n\n          const selectedColours = tableau10.slice(totalSites, totalSites + nSites);\n\n          //   for (let i = 0; i < nSites; i++) {\n          //     tableau10.push(tableau10.shift());\n          //   }\n\n          const vis = (\n            <GraphContainer key={containerKey}>\n              <LineChart\n                divID={getVisID()}\n                data={siteData}\n                colours={selectedColours}\n                title={title}\n                xLabel=\"Date\"\n                yLabel=\"Concentration\"\n                key={key}\n              />\n            </GraphContainer>\n          );\n\n          visualisations.push(vis);\n\n          totalSites += nSites;\n        }\n      }\n    }\n\n    return visualisations;\n  }\n\n  componentDidMount() {\n    // const apiURL = \"\";\n    // fetch(apiURL)\n    //   .then((res) => res.json())\n    //   .then(\n    //     (result) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         weatherData: result,\n    //         // or apiData\n    //       });\n    //     },\n    //     (error) => {\n    //       this.setState({\n    //         isLoaded: true,\n    //         error,\n    //       });\n    //     }\n    //   );\n  }\n\n  getID() {\n    // Create a unique ID for each visualisation\n    return \"vis-id-\" + nanoid();\n  }\n\n  toggleSidePanel() {\n    this.setState({ sidePanel: !this.state.sidePanel });\n  }\n\n  render() {\n    let { error, isLoaded } = this.state;\n\n    // Just set this as true for now as we're not pulling anything\n    // from an API\n    // isLoaded = true;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"grid-container\">\n          <div className=\"header\">\n            <div>\n              <div></div>\n            </div>\n            LondonGHG Dashboard\n          </div>\n          <div className=\"main\">\n            <div className=\"main-side\">\n              <ControlPanel dataKeys={this.state.dataKeys} dataSelector={this.dataSelector} />\n            </div>\n            <div className=\"main-panel\">\n              <FootprintAnalysis\n                sites={siteData}\n                centre={[51.5, -0.0482]}\n                zoom={9}\n                width={\"75vw\"}\n                height={\"40vh\"}\n                measurementData={this.state.processedData}\n                siteData={siteData}\n              />\n\n              {/* <SliderMap\n                dateSelector={this.dateSelector}\n                sites={siteData}\n                centre={[51.5, -0.0482]}\n                zoom={11}\n                width={\"75vw\"}\n                height={\"65vh\"}\n              />\n              <SliderMap\n                dateSelector={this.dateSelector}\n                sites={siteData}\n                overlayImg={londonFootprint}\n                overlayBounds={[\n                  [50.87063, -1.26],\n                  [52.0193672, 0.46799811],\n                ]}\n                centre={[51.5, -0.0482]}\n                zoom={11}\n                width={\"75vw\"}\n                height={\"65vh\"}\n              /> */}\n              {/* <LeafletMap\n                sites={{ TMB: londonGHGSites[\"TMB\"] }}\n                overlayImg={londonFootprint}\n                overlayBounds={[\n                  [50.87063, -1.26],\n                  [52.0193672, 0.46799811],\n                ]}\n                centre={[51.5, -0.0482]}\n                zoom={10}\n                width={\"75vw\"}\n                height={\"65vh\"}\n              /> */}\n              <Summary>\n                <div>\n                  To tackle climate change, we need to measure and reduce carbon emissions. London GHG is installing a\n                  new network of atmospheric measurements across the capital, and developing a new modelling framework\n                  to provide emission estimates of carbon dioxide and methane.\n                </div>\n              </Summary>\n\n              <Overview />\n\n              <VisLayout>{this.createGraphs()}</VisLayout>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}